AccidentClaim.cshtml
====================
@model  SAPPERI.Model.ViewModel.AccidentViewModel
@{
    ViewBag.Title = "Accident Claim";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="white-box radius5">
    <div class="title">Accident Claims</div>
    <div class="row form-wrap">
        <input type="hidden" id="hfReportURL" data-PRPopUpUrl="@Url.Action("../Reports/Reports.aspx")">
        <input type="hidden" id="txtAccidentClaimID" value="0" />
        <input type="hidden" id="txtSAPID" value="0" />
        @Html.Hidden("hdnCurrentUnitID", ApplicationContext.Current.UserInfo.LocationID, new { id = "hdnCurrentUnitID" })
        @Html.Hidden("hdnCurrentUnitCode", ApplicationContext.Current.UserInfo.LocationCode, new { id = "hdnCurrentUnitCode" })
        @Html.Hidden("hdnCurrentUnit", ApplicationContext.Current.UserInfo.LocationName, new { id = "hdnCurrentUnit" })
        <form class="col s12">
            <div class="common-tab border radius3">
                <div class="row">
                    <div class="col s12">
                        <ul class="tabs">
                            <li class="tab"><a class="active" href="#ClaimApproval">Accident Claim</a></li>
                            <li class="tab"><a href="#SAPLink">SAP Link</a></li>
                        </ul>
                    </div>
                    <div id="ClaimApproval" class="col s12 tab-content">
                        <div class="row no-margin">
                            <div class="input-field col l4 s12">
                                <label>Unit <span class="Mandatory">*</span></label>
                                <input type="text" id="txtUnit" readonly>
                                <button id="btnShowUnit" type="button" class="button-lst"><span></span><span></span><span></span></button>
                                <input type="hidden" id="txtUnitID" value="0" />
                                <input type="hidden" id="txtUnitCode" />
                            </div>
                            <div class="input-field col l4 s12">
                                <label for="Vendor_Code">Vendor<span class="Mandatory">*</span></label>
                                <input type="text" id="txtVendor" readonly>
                                <button id="btnShowVendor" type="button" class="button-lst"><span></span><span></span><span></span></button>
                                <input type="hidden" id="txtVendorID" />
                                @*<input type="hidden" id="txtVendorCode" />*@
                            </div>
                            <div class="input-field col l4 s12">
                                <label for="Name">Accident ID<span class="Mandatory">*</span></label>
                                <input type="text" id="txtAccidentEntryID" readonly>
                                <button id="btnShowAccidentID" type="button" class="button-lst"><span></span><span></span><span></span></button>
                                <input type="hidden" id="txtAccidentID" />
                            </div>
                        </div>

                        <div class="row no-margin">
                            <div class="input-field col l4 s12">
                                <label>Vehicle No</label>
                                <input id="txtVehicleNo" type="text" class="validate" disabled>
                                <input type="hidden" id="txtVehicleID" />
                            </div>
                            <div class="input-field col l4 s12">
                                <label for="Vendor_Code">Accident Date</label>
                                <input type="text" class="datepicker" id="txtAccidentDate" disabled>

                            </div>
                            <div class="input-field col l4 s12">
                                <label for="Name">Claim Ref No<span class="Mandatory">*</span></label>
                                <input type="text" class="validate" id="txtClaimNo" maxlength="25">
                            </div>
                        </div>

                        <div class="row no-margin">
                            <div class="input-field col l4 s12">
                                <label>Claim Date<span class="Mandatory">*</span></label>
                                <input id="txtClaimDate" type="text" class="datepicker">

                            </div>
                            <div class="input-field col l4 s12">
                                <label for="Vendor_Code">Reference No</label>
                                <input type="text" class="validate" id="txtReferenceNo">

                            </div>
                            <div class="input-field col l4 s12">
                                <label for="Name">Expense On Vehicle<span class="Mandatory">*</span></label>
                                <input type="text" class="validate numericclass" id="txtExpense" maxlength="10">

                            </div>
                        </div>

                        <h2 class="form-title"><span>Other Expense</span></h2>
                        <div class="row no-margin">
                            <div class="col l4 s12">
                                <div class="row">
                                    <div class="input-field col s12">
                                        <label>Amount</label>
                                        <input id="txtOtherAmount" type="text" class="validate numericclass" maxlength="10">
                                    </div>
                                    <div class="input-field col s12">
                                        <label>Claim Amount<span class="Mandatory">*</span></label>
                                        <input id="txtClaimAmount" type="text" class="validate" maxlength="10">
                                    </div>
                                </div>
                            </div>
                            <div class="input-field col l8 s12">
                                <label for="Vendor_Code">Remarks</label>
                                <textarea class="materialize-textarea comment" id="txtRemarks"></textarea>
                            </div>
                        </div>
                    </div>
                    <div id="SAPLink" class="col s12 tab-content">
                        <div class="row">
                            @{
                            Html.RenderPartial("~/Views/Shared/Saplink.cshtml");
                            }
                        </div>
                        <div class="form-submit clearfix">
                            <div class="right">
                                <button type="button" class="btn default round button" id="btnPaySlip">Payslip</button>
                                <button type="button" class="btn default round button" id="btnPrint">Print</button>
                                <button type="button" class="btn save round button" id="btnSave">Save</button>
                                <button type="button" class="btn new round button" id="btnCancel">Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>

    </div>
</div>
<div class="white-box grid-detail radius3">
    <div id="dvContainer" class="col-md-12">
        <table id="grid-tableAccidentClaim"></table>
        <div id="grid-pagerAccidentClaim"></div>
        <input type="hidden" id="hdnLastPage" value="0" />
    </div>
</div>


@*Unit Popup Window*@
<div id="modalUnitDetails" class="modal small-modal">
    <div class="row no-margin">
        <h2 class="title">
            Select Unit
            <a href="#!" class="modal-action modal-close right">
                <i class="icon pop-close"></i>
            </a>
        </h2>
    </div>


    <div class="modal-content" id="modalUnit">
        <div class="row">
            <div class="loader" id="loader_Unitlist">
                <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>
            </div>

            <div class="input-field col l12 s12">
                <div class="clearfix">
                    <div id="dvContainer" class="col-md-12">
                        <table id="grid-Unittable"></table>
                        <div id="grid-Unitpager"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*AccidentID Window*@
<div id="modalAccidentIDDetails" class="modal small-modal">
    <div class="row no-margin">
        <h2 class="title">
            Select Accident ID
            <a href="#!" class="modal-action modal-close right">
                <i class="icon pop-close"></i>
            </a>
        </h2>
    </div>
    <div class="modal-content" id="modalAccidentID">
        <div class="row">
            <div class="loader" id="loader_AccidentID">
                <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>
            </div>
            <div class="input-field col l12 s12">
                <div class="clearfix">
                    <div id="dvContainer" class="col-md-12">
                        <table id="grid-AccidentIDtable"></table>
                        <div id="grid-AccidentIDpager"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*Vendor link Popup Window*@
<div id="modalVendorDetails" class="modal">
    <div class="row no-margin">
        <h2 class="title">
            Select vendor
            <a href="#!" class="modal-action modal-close right">
                <i class="icon pop-close"></i>
            </a>
        </h2>
    </div>

    <div class="modal-content" id="modalVendor">
        <div class="input-field col l12" id="VendorPartialView">
            @{
                Html.RenderPartial("VendorDetails", Model.Vendorviewmodel);
            }

        </div>
    </div>
    <div class="form-submit clearfix">
        <div class="right">
            <button type="submit" class="btn save round button" id="btnSapSubmit">OK</button>
            <button type="button" class="btn cancel round button" id="btnSapCancel">Cancel</button>
        </div>
    </div>
</div>

@*@*Business Area Popup Window*@
<div id="modalBusinessArea" class="modal small-modal">
    <div class="row no-margin">
        <h2 class="title">
            Select Business Area
            <a href="#!" class="modal-action modal-close right">
                <i class="icon pop-close"></i>
            </a>
        </h2>
    </div>
    <div class="modal-content" id="modalBusiness">
        <div class="row">
            <div class="loader" id="loader_Business">
                <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>
            </div>
            <div class="input-field col l12 s12">
                <div class="clearfix">
                    <div id="dvContainer" class="col-md-12">
                        <table id="grid-BusinessAreatable"></table>
                        <div id="grid-BusinessAreapager"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*Expense Account Popup Window*@
<div id="modalExpenseAccount1" class="modal small-modal">
    <div class="row no-margin">
        <h2 class="title">
            Select Expense Account
            <a href="#!" class="modal-action modal-close right">
                <i class="icon pop-close"></i>
            </a>
        </h2>
    </div>
    <div class="modal-content" id="modalExpenseAccount1">
        <div class="row">
            <div class="loader" id="loader_ExpenseAccount1">
                <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>
            </div>
            <div class="input-field col l12 s12">
                <div class="clearfix">
                    <div id="dvContainer" class="col-md-12">
                        <table id="grdExpenseAccount1"></table>
                        <div id="grdPagerExpenseAccount1"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*Cost Center Popup Window*@
<div id="modalCostCenter1" class="modal small-modal">
    <div class="row no-margin">
        <h2 class="title">
            Select Cost Center
            <a href="#!" class="modal-action modal-close right">
                <i class="icon pop-close"></i>
            </a>
        </h2>
    </div>
    <div class="modal-content" id="modalCostCenter1">
        <div class="row">
            <div class="loader" id="loader_CostCenter">
                <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>
            </div>
            <div class="input-field col l12 s12">
                <div class="clearfix">
                    <div id="dvContainer" class="col-md-12">
                        <table id="grdCostCenter1"></table>
                        <div id="grdPagerCostCenter1"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*Internal Order Popup Window*@
<div id="modalInternalOrder1" class="modal small-modal">
    <div class="row no-margin">
        <h2 class="title">
            Select Internal Order
            <a href="#!" class="modal-action modal-close right">
                <i class="icon pop-close"></i>
            </a>
        </h2>
    </div>
    <div class="modal-content" id="modalInternalOrder1">
        <div class="row">
            <div class="loader" id="loader_InternalOrder1">
                <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>
            </div>
            <div class="input-field col l12 s12">
                <div class="clearfix">
                    <div id="dvContainer" class="col-md-12">
                        <table id="grdInternalOrder1"></table>
                        <div id="grdPagerInternalOrder1"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div id="modalVendor111" class="modal small-modal">
    <div class="row no-margin">
        <h2 class="title">
            Select Vendor
            <a href="#!" class="modal-action modal-close right">
                <i class="icon pop-close"></i>
            </a>
        </h2>
    </div>
    <div class="modal-content" id="modalVendor111">
        <div class="row">

            <div class="loader" id="loader_Vendor111">
                <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>
            </div>
            <div class="input-field col l12 s12">
                <div class="clearfix">
                    <div id="dvContainer" class="col-md-12">
                        <table id="grdVendor111"></table>
                        <div id="grdPagerVendor111"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts {
    @Scripts.Render("~/bundles/Accident/AccidentClaim")
}


Partial view -- VendorDetails
                =============
@model  SAPPERI.Model.ViewModel.VendorViewModel

<h2 class="form-title"><span>Vendor Details</span></h2>
<div class="row no-margin">  
    <div class="input-field col l4 s12">
        <label>&nbsp;</label>
        <input type="checkbox" class="filled-in" id="cbOneTimeVendor" tabindex="11">
        <label for="cbOneTimeVendor" style="color:#8997a6">One Time Vendor</label>
        <label>&nbsp;</label>
    </div>
</div>
<div class="row no-margin">
    <div class="input-field col l4 s12">
        <label>Vendor Code<span class="Mandatory">*</span></label>     
        <input type="text" id="txtVendorCode" readonly/>
        <button class="button-lst" type="button" name="btnSelectVendorCode" id="btnSelectVendorCode" title="Click to select Vendor" GridURL="@Url.Action("GetAllVendors","VehicleMaster")"><span></span><span></span><span></span></button>
        <input type="hidden" id="hdnVendorID" value="0" />
    </div>
    <div class="input-field col l2 s12">
        <label>Title<span class="Mandatory">*</span></label>
        @Html.DropDownListFor(m => m.TitleID, new SelectList(Model.TitleList, "TitleID", "Title"), "----- Select -----", new { id = "ddlTitle" })
    </div>
    @*<div class="input-field col l4 s12">
        <label>Name<span class="Mandatory">*</span></label>
        @Html.TextBoxFor(m => m.VendorName, new { id = "txtVendorName", @class = "validate" })
    </div>*@
    <div class="input-field col l6 s12" id="dvOneTimeVendor" OneTimeVendorSearch="@Url.Action("GetOneTimeVendorOnSearch", "VehicleMaster")"
         OneTimeVendorForAutoComplete="@Url.Action("GetOneTimeVendorForAutoComplete", "VehicleMaster")"
         OneTimeVendorOnSelection="@Url.Action("GetOneTimeVendorDetailsOnSelection", "VehicleMaster")"
         getPinDetails="@Url.Action("GetCityStateCountryID", "VehicleMaster")">
        <div class="row">
            <div class="input-field col l8 s12">
                <label>Vendor Name<span style="color:red">*</span></label>
                @*@Html.TextBoxFor(m => m.VendorName, new { id = "txtOneTimeVendorName", @class = "validate autocomplete", @maxlength = "50", @title = "Enter vendor name" })*@
                @Html.TextBoxFor(m => m.VendorName, new { id = "txtVendorName", @class = "validate" })
            </div> 
            <div class="input-field col l3 s12">
                <label>&nbsp;</label>
                <button type="button" id="btnOneTimeVendorPopUp" style="height:35px;width:90px;padding:0 21px !important" class="btn save round button" title="Click for advanced one time vendor search">Search</button>
            </div>
        </div>
    </div>
</div>
<div class="row no-margin">
    <div class="input-field col l4 s12">
        <label>&nbsp;</label>
        <input type="checkbox" class="filled-in" id="cbIsregisteredVendor" tabindex="11">
        <label for="cbIsregisteredVendor" style="color:#8997a6">Registered Vendor</label>      

    </div>
    <div class="input-field col l4 s12">
        <label for="Name">GSTIN</label>
        <input id="txtGSTIN" type="text" class="validate">
    </div>
    <div class="input-field col l4 s12">
        <label>Address 1<span class="Mandatory">*</span></label>
        @Html.TextBoxFor(m => m.Address1, new { id = "txtAddress1", @maxlength = 100, @class = "validate" })
    </div>


</div>
<div class="row no-margin">
    <div class="input-field col l4 s12">
        <label>Address 2</label>
        @Html.TextBoxFor(m => m.Address2, new { id = "txtAddress2", @maxlength = 100, @class = "validate" })
    </div>
    <div class="input-field col l4 s12">
        <label>Address 3</label>
        @Html.TextBoxFor(m => m.Address3, new { id = "txtAddress3", @maxlength = 100 })
    </div>
    <div class="input-field col l4 s12" id="dvPIN">
        <label>PIN</label>
        @Html.TextBoxFor(m => m.PIN, new { id = "txtPIN", @maxlength = "10", @title = "Enter PIN" })

    </div>

</div>

<div class="row no-margin">
    <div class="input-field col l4 s12">
        <label>City<span class="Mandatory">*</span></label>
        @Html.HiddenFor(m => m.City, new { id = "hdnCity" })
        @Html.DropDownListFor(m => m.CityID, new SelectList(Model.lstCities, "CityID", "City"), "----- Select-----", new { id = "ddlCity" })
    </div>
    <div class="input-field col l4 s12">
        <label>State<span class="Mandatory">*</span></label>
        @Html.HiddenFor(m => m.State, new { id = "hdnState" })
        @Html.DropDownListFor(m => m.StateID, new SelectList(Model.lstStates, "StateID", "State"), "----- Select -----", new { id = "ddlState" })
    </div>
    <div class="input-field col l4 s12">
        <label for="Place">Country<span class="Mandatory">*</span></label>
        @Html.DropDownListFor(m => m.CountryID, new SelectList(Model.lstCountry, "CountryID", "Country"), "----- Select -----", new { id = "ddlCountry" })

    </div>
</div>
<h2 class="form-title"><span></span></h2>

@*@*vendor Popup Window*@
<div id="modalVendor" class="modal small-modal">
    <div class="row no-margin">
        <div class="col s12 no-padding">
            <h2 class="title"> Vendor List  <a href="#!" class="modal-action modal-close right"><i class="icon pop-close"></i></a></h2>
        </div>
        <div class="loader" id="loader_vendor" style="display:none;">
            <div class="lds-ellipsis">
                <div></div>
                <div></div>
                <div></div>
                <div></div>
            </div>
        </div>

    </div>
    <div class="modal-content" id="divVendor">
        <div id="dvVendor" class="row">
            <div class="col l12">
                <table id="grdVendor" tabindex="6"></table>
                <div id="grdPagerVendor"></div>
                <input type="hidden" id="hdnLastPageItem" value="0" />
            </div>
        </div>
    </div>
</div>



<div id="modalOneTimeVendor" class="modal" style="width:80%">
    <div class="row no-margin">
        <h2 class="title">One Time Vendor Details <a href="#!" class="modal-action modal-close right"><i class="icon pop-close"></i></a></h2>

    </div>
    <div id="divOneTimeVendorDetails" class="modal-content">
        <div class="row">
            <div class="input-field col l6 s12">
                <label for="Website">Vendor Name</label>
                <input type="text" id="txtOnetimeVendorPopUpSearch" title="Enter one time vendor name to search" />


            </div>
            <div class="input-field col l6 s12">
                <label for="Website">&nbsp;</label>
                <button type="button" id="btnOneTimeVendorPopUpSearch" style="height:35px;width:90px;padding:0 21px !important" class="button search" title="Click for advanced one time vendor search">Search</button>
                <button type="button" id="txtOnetimeVendorPopUpCancel" style="height:35px;width:90px;padding:0 21px !important" class="button search" title="Click for advanced one time vendor search">Cancel</button>


            </div>
        </div>
        <div class="row">

            <div id="dvOneTimeVendorDetails" class="clearfix">
                <div class="col l12">
                    <table id="grdOneTimeVendorDetails" tabindex="15"></table>
                    <div id="grdPagerOneTimeVendorDetails"></div>
                </div>
            </div>

        </div>
    </div>
</div>


AccidentClaim.js
===============
jQuery(function ($) {
    var grid_Unit = "#grid-Unittable";
    var pager_Unit = "#grid-Unitpager";
    var grid_AccidentID = "#grid-AccidentIDtable";
    var pager_AccidentID = "#grid-AccidentIDpager";
    var grid_BusinessArea = "#grid-BusinessAreatable";
    var pager_BusinessArea = "#grid-BusinessAreapager";
    var grid_InternalOrder = "#grdInternalOrder1";
    var pager_InternalOrder = "#grdPagerInternalOrder1";
    var grid_ExpenseOrder = "#grdExpenseAccount1";
    var pager_ExpenseOrder = "#grdPagerExpenseAccount1";
    var grid_CostCenter = "#grdCostCenter1";
    var pager_CostCenter = "#grdPagerCostCenter1";
    var grid_vendor = "#grdVendor111";
    var grid_vendorPager = "#grdPagerVendor";
    var grid_Accident = "#grid-tableAccidentClaim";
    var pager_Accident = "#grid-pagerAccidentClaim";

    GetPaymentMode();
    loadAccidentClaims();

    $("#txtUnit").val($("#hdnCurrentUnit").val());
    $("#txtUnitID").val($("#hdnCurrentUnitID").val());
    $("#txtUnitCode").val($("#hdnCurrentUnitCode").val());
    loadbusinessarea();
    AccidentadvanceAccount();
    $("#btnOneTimeVendorPopUp").hide();

    $("#btnPaySlip").prop("hidden", true);
    $("#btnPrint").prop("hidden", true);

    $("#txtAccidentDate").prop("readonly", true);
    $("#txtClaimAmount").prop("readonly", true);

    $("#btnShowUnit").click(function () {
        $('#modalUnitDetails').modal('open');
        $(grid_Unit).jqGrid('GridUnload');
        $("#loader_Unitlist").show();
        $.ajax({
            type: "POST",
            url: "../InternalOrder/GetUnits",
            success: function (data) {
                gridBindUnitData(data);
                $("#loader_Unitlist").hide();
            }
        });
    });

    // .... Vendor part

    $("#btnShowVendor").click(function () {
        if ($("#txtUnit").val() != "") {
            $('#modalVendorDetails').modal('open');
        }
        else {
            $('#txtUnit').addClass("input-validation-error");
        }
    });

    $('#btnSelectVendorCode').on("click", function () {
        GetVendorDetails();
    });

    $("#cbOneTimeVendor").change(function () {
        if ($("#cbOneTimeVendor").is(":checked")) {

            $("#btnOneTimeVendorPopUp").show();
            $("#txtVendorName").val("");
            $("#txtVendorCode").prop('disabled', false);
            $("#txtVendorName").prop('disabled', false);
            $("#txtAddress1").prop('disabled', false);
            $("#txtAddress2").prop('disabled', false);
            $("#txtAddress3").prop('disabled', false);
            $("#txtPIN").prop('disabled', false);
            $("#ddlCity").prop('disabled', false);
            $("#ddlCity").material_select();
            $("#ddlState").prop('disabled', false);
            $("#ddlState").material_select();
            $("#ddlCountry").prop('disabled', false);
            $("#ddlCountry").material_select();

        }
        else {

            $("#btnOneTimeVendorPopUp").hide();
            $("#txtVendorName").val("");
            $("#txtVendorCode").prop('disabled', true);
            $("#txtAddress1").prop('disabled', true);
            $("#txtAddress2").prop('disabled', true);
            $("#txtAddress3").prop('disabled', true);
            $("#txtPIN").prop('disabled', true);
            $("#ddlCity").prop('disabled', true);
            $("#ddlCity").material_select();
            $("#ddlState").prop('disabled', true);
            $("#ddlState").material_select();
            $("#ddlCountry").prop('disabled', true);
            $("#ddlCountry").material_select();

        }

        $("#txtVendorName").val("");
        $("#hdnVendorID").val("0");
        $("#txtVendorCode").val("");
        $("#cbIsregisteredVendor").prop('checked', false);
        $("#txtGSTIN").val("");
        $("#txtAddress1").val("");
        $("#txtAddress2").val("");
        $("#txtAddress3").val("");
        $("#txtPIN").val("");
        $("#ddlCity").val("");
        $("#ddlCity").material_select();
        $("#ddlTitle").val("");
        $("#ddlTitle").material_select();
        $("#ddlState").val("");
        $("#ddlState").material_select();
        $("#ddlCountry").val("");
        $("#ddlCountry").material_select();
        $("#cbIsregisteredVendor").prop('disabled', false);
        $("#txtGSTIN").prop('disabled', false);


        // GetVendorDetails();
    });

    $("#btnOneTimeVendorPopUpSearch").click(function () {
        if ($("#txtOnetimeVendorPopUpSearch").val() == "") {
            swal({ icon: "info", text: "Please enter atleast one character for search", type: "info" });
        } else {
            var OneTimeVendorName = $("#txtOnetimeVendorPopUpSearch").val();
            GetOneTimeVendorDetails(OneTimeVendorName);
        }
    });

    $("#btnOneTimeVendorPopUp").click(function () {
        $('.autocomplete-content').remove();
        if ($("#txtVendorCode").val() != "") {
            if ($("#txtVendorName").val() == "") {

                message = '<p>Please enter atleast one character for search. <a>Pop up closes in 5 secs</a></p>';
                type = 'warning';
                showNotification(message, type);
            } else {
                var OneTimeVendorName = $("#txtVendorName").val();
                GetOneTimeVendorDetails(OneTimeVendorName);
                $("#txtOnetimeVendorPopUpSearch").val($.trim($("#txtVendorName").val()));

            }
        }
        else {

            message = '<p>Please select vendor before search. <a>Pop up closes in 5 secs</a></p>';
            type = 'warning';
            showNotification(message, type);
        }
    });

    $("#txtOnetimeVendorPopUpCancel").click(function () {
        $("#txtOnetimeVendorPopUpSearch").val("");
        GetOneTimeVendorDetails("-567");
    });

    //....................................

    $('#btnSapCancel').on("click", function () {
        ClearVendor();
    });
    $('#btnSapSubmit').on("click", function () {
        $('#modalVendorDetails').modal('close');
    });
    $('#btnShowAccidentID').on("click", function () {
        var UnitID = $('#txtUnitID').val();
        if (UnitID > 0) {
            $('#modalAccidentIDDetails').modal('open');
            $(grid_AccidentID).jqGrid('GridUnload');
            $("#loader_AccidentID").show();
            $.ajax({
                type: "POST",
                url: "../Accident/GetAccidentIDs",
                data: { UnitID: UnitID },
                success: function (data) {
                    if (data.length > 0)
                    {
                      
                        gridBindAccidentIDDetails(data);
                    }                  
                    $("#loader_AccidentID").hide();
                }
            });
        }
        else {
            $('#txtUnit').addClass("input-validation-error");
        }
    });

    $("#btnSelectBusinessArea1").click(function () {
        $('#modalBusinessArea').modal('open');
        $(grid_BusinessArea).jqGrid('GridUnload');
        $("#loader_BusinessArea").show();
        $.ajax({
            type: "POST",
            url: "../VehicleMaster/GetAllBusinessAreas",
            success: function (data) {
                gridBindBusinessAreas(data, status = 1);
                $("#loader_BusinessArea").hide();
            }
        });
    });

    $("#btnSelectBusinessArea2").click(function () {
        $('#modalBusinessArea').modal('open');
        $(grid_BusinessArea).jqGrid('GridUnload');
        $("#loader_BusinessArea").show();
        $.ajax({
            type: "POST",
            url: "../VehicleMaster/GetAllBusinessAreas",
            success: function (data) {
                gridBindBusinessAreas(data, status = 2);
                $("#loader_BusinessArea").hide();
            }
        });
    });

    $("#btnSelectExpenseAccount").click(function () {
        $('#modalExpenseAccount1').modal('open');
        $(grid_ExpenseOrder).jqGrid('GridUnload');
        $("#loader_ExpenseAccount1").show();
        $.ajax({
            type: "POST",
            url: "../VehicleMaster/GetExpenseAccount",
            success: function (data) {
                gridBindExpenseAccount(data);
                $("#loader_ExpenseAccount1").hide();
            }
        });
    });

    $("#btnSelectCostCenter").click(function () {
        var businessAreaID = $('#hdnBusinessArea1Id').val();
        var unitId = $('#txtUnitID').val();
        var glAccountId = $('#hdnExpenseAccountId').val();
        if (businessAreaID != "") {
            $('#modalCostCenter1').modal('open');
            $(grid_CostCenter).jqGrid('GridUnload');
            $("#loader_CostCenter").show();
            $.ajax({
                type: "POST",
                url: "../VehicleMaster/GetCostCenter",
                data: {businessAreaID: businessAreaID},
                success: function (data) {
                    gridBindCostCenter(data.data);
                    $("#loader_CostCenter").hide();
                }
            });
        }
        else {
            $('#txtBusinessArea1').addClass("input-validation-error");
        }
    });

    $("#btnPrint").click(function () {
        var AccidentID = $("#txtAccidentID").val();
        var src = $("#hfReportURL").attr('data-PRPopUpUrl') + "?";
        src = src + "rptName=AccidentClaimPrint&AccidentID=" + AccidentID;
        window.open(src, target = '_blank');
    });

    $("#btnPaySlip").click(function () {
        var AccidentID = $("#txtAccidentID").val();
        var src = $("#hfReportURL").attr('data-PRPopUpUrl') + "?";
        src = src + "rptName=AccidentClaimPaySlip&AccidentID=" + AccidentID;
        window.open(src, target = '_blank');
    });
    
    $("#btnSelectInternalOrder").click(function () {
        var businessAreaID = $('#hdnBusinessArea1Id').val();
        if (businessAreaID != "") {
            $('#modalInternalOrder1').modal('open');
            $(grid_InternalOrder).jqGrid('GridUnload');
            $("#loader_InternalOrder").show();
            $.ajax({
                type: "POST",
                url: "../VehicleMaster/GetInternalOrderByCompanyAndBusinessArea",
                data: { businessAreaID: businessAreaID },
                success: function (data) {
                    gridBindInternalOrders(data);
                    $("#loader_InternalOrder").hide();
                }
            });
        }
        else {
            $('#txtBusinessArea1').addClass("input-validation-error");
        }
    });

    $("#btnCancel").click(function () {
        Clear();
    });

    $("#btnSave").click(function () {       
        if (fieldValidation() == 1) {
            var details = new Object();  
            //main details
            details.AccidentID = $("#txtAccidentID").val();
            details.SAPID = $("#txtSAPID").val();
            details.UnitCode = $("#txtUnitCode").val();
            details.UnitID = $("#txtUnitID").val();
            details.UnitName = $("#txtUnit").val();
            details.VehicleID = $("#txtVehicleID").val();
            details.AccidentEntryID = $("#txtAccidentEntryID").val();
            details.AccidentDate = $("#txtAccidentDate").val();
            details.ClaimDate = $("#txtClaimDate").val();
            details.ClaimReferenceNo = $("#txtClaimNo").val();
            details.VehicleExpenses = $("#txtExpense").val();
            details.OtherExpense = $("#txtOtherAmount").val();
            details.ClaimAmount = $("#txtClaimAmount").val();
            details.AccidentRemarks = $("#txtRemarks").val();
            details.ReferenceNo = $("#txtReferenceNo").val();
            details.BusinesAreaCode = $("#hdnBusinessArea1Code").val();
            details.CostCenterCode = $("#hdnCostCenterCode").val();
            details.InternalOrderCode = $("#hdnInternalOrderCode").val();
            details.PaymentMode = $('#ddlPaymentMode option:selected').text();
            details.ActualAmount = $("#txtClaimAmount").val();
            details.SupplierID = $("#hdnVendorID").val();
            details.VendorName = $("#txtVendorName").val();     
            details.BusinessAreaCode2 = $("#hdnBusinessArea2Code").val();
            details.BusinessAreaID = $("#hdnBusinessArea1Id").val();
            details.CostCenterID = $("#hdnCostCenterId").val();
            details.InternalOrderID = $("#hdnInternalOrderId").val();
            details.BusinessAreaID2 = $("#hdnBusinessArea2Id").val();
            details.PaymentModeID = $("#ddlPaymentMode").val();
            details.Reference = $("#txtReferenceNo").val();

            //vendor and sap details   
          
            details.SAPExpenseAccountID = $("#hdnExpenseAccountId").val();
            details.SAPExpenseAccount = $("#txtExpenseAccount").val();           
            details.Address1 = $("#txtAddress1").val();
            details.Address2 = $("#txtAddress2").val();
            details.Address3 = $("#txtAddress3").val();
            details.Title = $('#ddlTitle option:selected').text();
            details.TitleID = $("#ddlTitle").val();                
            details.VendorCode = $("#txtVendorCode").val();
            if ($("#cbOneTimeVendor").is(":checked")) {
                details.IsOneTimeVendor = 1;
            }
            else {
                details.IsOneTimeVendor = 0;
            }
           
            details.CostCenter = $("#txtCostCenter").val();
            details.InternalOrderID = $("#hdnInternalOrderId").val();
            details.InternalOrder = $("#txtInternalOrder").val();
            details.BussinessArea = $("#txtBusinessArea1").val();
            details.BusinessAreaID = $("#hdnBusinessArea1Id").val();
            details.BussinessAreaCode = $("#hdnBusinessArea1Code").val();
            details.BussinessArea2 = $("#txtBusinessArea2").val();
            details.BussinessAreaID2 = $("#hdnBusinessArea2Id").val();
            details.BussinessAreaCode2 = $("#BussinessAreaCode2").val();
            details.CityID = $("#ddlCity").val();
            details.CityName = $('#ddlCity option:selected').text();
            details.StateID = $("#ddlState").val();
            details.StateName = $('#ddlState option:selected').text();
            details.CountryID = $("#ddlCountry").val();
            details.CountryName = $('#ddlCountry option:selected').text();
            details.PIN = $("#txtPIN").val();
            if ($("#txtGSTIN").val() != "") {
                details.IsRegisteredVendor = 1;
            }
            else {
                details.IsRegisteredVendor = 0;
            }

            details.PaymentModeID = $('#ddlPaymentMode').val();
            details.PaymentMode = $('#ddlPaymentMode option:selected').text(); 
            details.GSTNumber = $('#txtGSTIN').val();
       

        $.ajax({
            url: '../Accident/SaveAccidentClaim',
            type: 'POST',
            data: { Details: details,test:"test" },
            success: function (data) {
                if (data > 0) {
                    Clear();
                    loadAccidentClaims();
                    message = '<p>Data saved successfully.<a>Pop up closes in 5 secs</a></p>';
                    type = 'notice';
                    showNotification(message, type);

                }
                else if (data == -5) {
                    message = '<p>Accident ID exists for this unit<a>Pop up closes in 5 secs</a></p>';
                    type = 'warning';
                    showNotification(message, type);
                }
                else {
                    message = '<p>Saving failed<a>Pop up closes in 5 secs</a></p>';
                    type = 'warning';
                    showNotification(message, type);
                }
            }
            });
        }
    });   
     

    $('.numericclass').keypress(function (event) {
        var $this = $(this);
        if ((event.which != 46 || $this.val().indexOf('.') != -1) && ((event.which < 48 || event.which > 57) && (event.which != 0 && event.which != 8))) {
            event.preventDefault();
        }
        var text = $(this).val();
        if ((event.which == 46) && (text.indexOf('.') == -1)) {
            setTimeout(function () {
                if ($this.val().substring($this.val().indexOf('.')).length > 3) {
                    $this.val($this.val().substring(0, $this.val().indexOf('.') + 3));
                }
            }, 1);
        } if ((text.indexOf('.') != -1) && (text.substring(text.indexOf('.')).length > 2) && (event.which != 0 && event.which != 8) && ($(this)[0].selectionStart >= text.length - 2)) {
            event.preventDefault();
        }
    });

    $("#txtExpense,#txtOtherAmount").change(function () {
        CalcClaimAmount();
    });

    $(document).on("click", "a.edit", function (event) {
        event.preventDefault();
        var rowid = $(grid_Accident).jqGrid('getGridParam', 'selrow');
        var AccidentID = $(grid_Accident).jqGrid('getCell', rowid, 'AccidentID');
        Clear();
        $.ajax({
            type: "POST",
            url: "../Accident/loadAccidentClaimsbyID",
            data: { AccidentID: AccidentID },
            success: function (data) {
                EditAccidentClaimEntry(data);
            }
        });
    });

    $(document).on("click", "a.remove", function (event) {
        event.preventDefault();
        var rowid = $(grid_Accident).jqGrid('getGridParam', 'selrow');
        var AccidentID = $(grid_Accident).jqGrid('getCell', rowid, 'AccidentID');

        swal({
            title: "Are you sure?",
            text: "Do you want to delete the selected item ? ",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {
                    deleteAccidentID(AccidentID);

                } else {

                }
            });
    });

    // vendor part........

    function GetOneTimeVendorDetails(OneTimeVendorName) {

        $.ajax({
            type: "POST",
            url: $("#dvOneTimeVendor").attr('OneTimeVendorSearch'),
            dataType: "json",
            data: { OneTimeVendorName: OneTimeVendorName },
            success: function (data) {
                OneTimeVendorDetails(data);
                $('#modalOneTimeVendor').modal('open');
            },

        });
    }

    function OneTimeVendorDetails(data) {
        jQuery(grdOneTimeVendo_selector).jqGrid('GridUnload');
        jQuery(grdOneTimeVendo_selector).jqGrid({
            data: data,
            datatype: "local",
            colNames: ['CityID', 'StateID', 'CountryID', 'IsRegisteredVendor', 'GSTNumber', 'Vendor Name', 'Address1', 'Address2', 'City', 'State', 'Country', 'PIN'],
            colModel: [

                { name: 'CityID', index: 'CityID', hidden: true },
                { name: 'StateID', index: 'StateID', hidden: true },
                { name: 'CountryID', index: 'CountryID', hidden: true },
                { name: 'IsRegisteredVendor', index: 'IsRegisteredVendor', hidden: true },
                { name: 'GSTNumber', index: 'GSTNumber', hidden: true },
                { name: 'VendorName', index: 'VendorName', search: true },
                { name: 'Address1', index: 'Address1' },
                { name: 'Address2', index: 'Address2' },
                { name: 'CityName', index: 'CityName' },
                { name: 'StateName', index: 'StateName' },
                { name: 'CountryName', index: 'CountryName' },
                { name: 'PIN', index: 'PIN' }

            ],

            viewrecords: true,
            rowNum: 10,
            rowList: [10, 20, 30],
            pager: grdOneTimeVendoPager_selector,
            altRows: true,
            autowidth: true,
            loadComplete: function () {
                var table = this;
                setTimeout(function () {
                    updatePagerIcons(table);
                }, 0);
            },
            gridComplete: function () {
            },

            ondblClickRow: function () {
                var sel_id = $(grdOneTimeVendo_selector).jqGrid('getGridParam', 'selrow');
                if (sel_id != null) {
                    $("#txtVendorName").val($(grdOneTimeVendo_selector).jqGrid('getCell', sel_id, 'VendorName'));
                    var IsRegisteredVendor = $(grdOneTimeVendo_selector).jqGrid('getCell', sel_id, 'IsRegisteredVendor');
                    if (IsRegisteredVendor == 1) {
                        $("#cbIsregisteredVendor").prop('checked', true);
                        $("#cbIsregisteredVendor").prop('disabled', true);
                        $("#txtGSTIN").prop('disabled', true);
                    }
                    else {
                        $("#cbIsregisteredVendor").prop('checked', false);
                        $("#cbIsregisteredVendor").prop('disabled', false);
                        $("#txtGSTIN").prop('disabled', false);
                    }
                    $("#txtGSTIN").val($(grdOneTimeVendo_selector).jqGrid('getCell', sel_id, 'GSTNumber'));
                    $("#txtAddress1").val($(grdOneTimeVendo_selector).jqGrid('getCell', sel_id, 'Address1'));
                    $("#txtAddress2").val($(grdOneTimeVendo_selector).jqGrid('getCell', sel_id, 'Address2'));
                    $("#txtAddress3").val($(grdOneTimeVendo_selector).jqGrid('getCell', sel_id, 'Address3'));
                    $("#txtPIN").val($(grdOneTimeVendo_selector).jqGrid('getCell', sel_id, 'PIN'));
                    $("#ddlCity").val($(grdOneTimeVendo_selector).jqGrid('getCell', sel_id, 'CityID'));
                    $("#ddlCity").material_select();
                    $("#ddlState").val($(grdOneTimeVendo_selector).jqGrid('getCell', sel_id, 'StateID'));
                    $("#ddlState").material_select();
                    $("#ddlCountry").val($(grdOneTimeVendo_selector).jqGrid('getCell', sel_id, 'CountryID'));
                    $("#ddlCountry").material_select();
                    $('#modalOneTimeVendor').modal('close');

                }
            }
        })

        $(grdOneTimeVendo_selector).jqGrid('navGrid', grdOneTimeVendoPager_selector,
            { 	//navbar options
                edit: false,
                editicon: 'ace-icon fa fa-pencil blue',
                add: false,
                addicon: 'ace-icon fa fa-plus-circle purple',
                del: false,
                delicon: 'ace-icon fa fa-trash-o red',
                search: true,
                searchicon: 'ace-icon fa fa-search orange',
                refresh: true,
                refreshicon: 'ace-icon fa fa-refresh green',
                view: false,
                viewicon: 'ace-icon fa fa-search-plus grey',
            },
            {

                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    style_edit_form(form);
                }
            },
            {

                closeAfterAdd: true,
                recreateForm: true,
                viewPagerButtons: false,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar')
                        .wrapInner('<div class="widget-header" />')
                    style_edit_form(form);
                }
            },
            {
                //delete record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    if (form.data('styled')) return false;

                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    style_delete_form(form);

                    form.data('styled', true);
                },
                onClick: function (e) {

                }
            },
            {
                //search form
                recreateForm: true, sopt: ['cn'], ignoreCase: true, viewrecords: true, closeAfterSearch: true,
                afterShowSearch: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                    style_search_form(form);
                },
                afterRedraw: function () {

                }
                ,

            },
            {
                //view record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                }
            }
        )


        $(window).triggerHandler('resize.jqGrid');
        function updatePagerIcons(table) {
            var replacement =
                {
                    'ui-icon-seek-first': 'ace-icon fa fa-angle-double-left bigger-140',
                    'ui-icon-seek-prev': 'ace-icon fa fa-angle-left bigger-140',
                    'ui-icon-seek-next': 'ace-icon fa fa-angle-right bigger-140',
                    'ui-icon-seek-end': 'ace-icon fa fa-angle-double-right bigger-140'
                };
            $('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function () {
                var icon = $(this);
                var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
                if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);
            })
        }

    }

    function GetVendorDetails() {
        var unitId = 0;
        var status = false;
        showLoader();
        $('#modalVendor111').modal('open');

        if ($('#chkOneTimeVendor').is(':checked')) {
            status = true;
        }

        if ($('#txtUnitID').val() != "" && $('#txtUnitID').val() != null) {
            unitId = $('#txtUnitID').val();
        }

        $.ajax({
            type: "POST",
            url: $('#btnSelectVendorCode').attr("GridURL"),
            data: { chkOneTime: status, unitID: unitId, VendorType: 10 },
            cache: false,
            success: function (data) {
                if (data != null) {
                    gridBindVendor(data);
                }
            },
            error: function (request, error) {
                console.log(request);
                console.log(error);
            }
        });
    }

    function ClearVendor() {
        $('#cbOneTimeVendor').prop("checked", false);
        $('#txtVendorCode').val('');
        $('#hdnVendorID').val('');
        $('#ddlTitle').val('');
        $('#ddlTitle').material_select();
        $('#txtVendorName').val('');
        $('#cbIsregisteredVendor').prop("checked", false);
        $('#txtGSTIN').val('');
        $('#txtAddress1').val('');
        $('#txtAddress2').val('');
        $('#txtAddress3').val('');
        $('#ddlCity').val('');
        $('#ddlState').val('');
        $('#ddlCountry').val('');
        $('#ddlCity').material_select();
        $('#ddlState').material_select();
        $('#ddlCountry').material_select();
        $('#txtPIN').val('');
        $("#btnOneTimeVendorPopUp").hide();
    }


    function gridBindVendor(data) {

        var parent_column = $(grid_vendor).closest('[class*="col "]');
        //resize to fit page size
        $(window).on('resize.jqGrid', function () {
            $(grid_vendor).jqGrid('setGridWidth', parent_column.width());
        })

        //resize on sidebar collapse/expand
        $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
            if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                setTimeout(function () {
                    $(grid_vendor).jqGrid('setGridWidth', parent_column.width());
                }, 20);
            }
        });
        $(grid_vendor).jqGrid('GridUnload');
        jQuery(grid_vendor).jqGrid({
            datastr: data,
            datatype: "jsonstring",
            colNames: ['VendorID', 'TitleID', 'VendorName', 'NickName', 'VendorCode', 'Address1', 'Address2', 'Address3',
                'City', 'State', 'Country', 'PIN', 'GSTNumber', 'IsRegistered'],
            colModel: [
                { name: 'VendorID', index: 'VendorID', key: true, hidden: true },
                { name: 'TitleID', index: 'TitleID', hidden: true },
                { name: 'VendorName1', index: 'VendorName1', search: true },
                { name: 'NickName', index: 'NickName', search: true, hidden: true },
                { name: 'VendorAccountID', index: 'VendorAccountID', hidden: true },
                { name: 'Address1', index: 'Address1' },
                { name: 'Address2', index: 'Address2' },
                { name: 'Address3', index: 'Address3' },
                { name: 'City', index: 'City', hidden: true },
                { name: 'State', index: 'State', hidden: true },
                { name: 'Country', index: 'Country', hidden: true },
                { name: 'PIN', index: 'PIN', hidden: true },
                { name: 'GSTNumber', index: 'GSTNumber' },
                { name: 'IsRegistered', index: 'IsRegistered', hidden: true }
            ],
            viewrecords: true,
            rowNum: 10,
            rowList: [10, 20, 30],
            pager: grid_vendorPager,
            altRows: true,
            autowidth: true,
            ignoreCase: true,
            height: 250,
            loadComplete: function () {
                var table = this;
                setTimeout(function () {
                    updatePagerIcons(table);
                }, 0);
            },
            gridComplete: function () {


                hideLoader();
            },
            editurl: "#",
            ondblClickRow: function () {

                sel_id = $('#grdVendor111').jqGrid('getGridParam', 'selrow');
                var VendorId = $('#grdVendor111').jqGrid('getCell', sel_id, 'VendorID');
                var VendorName = $('#grdVendor111').jqGrid('getCell', sel_id, 'VendorName1');
                var VendorCode = $('#grdVendor111').jqGrid('getCell', sel_id, 'VendorAccountID');
                var TitleID = $('#grdVendor111').jqGrid('getCell', sel_id, 'TitleID');
                var City = $('#grdVendor111').jqGrid('getCell', sel_id, 'City');
                var State = $('#grdVendor111').jqGrid('getCell', sel_id, 'State');
                var Country = $('#grdVendor111').jqGrid('getCell', sel_id, 'Country');
                var GSTN = $('#grdVendor111').jqGrid('getCell', sel_id, 'GSTNumber');
                var Address1 = $('#grdVendor111').jqGrid('getCell', sel_id, 'Address1');
                var Address2 = $('#grdVendor111').jqGrid('getCell', sel_id, 'Address2');
                var Address3 = $('#grdVendor111').jqGrid('getCell', sel_id, 'Address3');
                var PinCode = $('#grdVendor111').jqGrid('getCell', sel_id, 'PIN');
                var IsRegistered = $('#grdVendor111').jqGrid('getCell', sel_id, 'IsRegistered');

                $("#hdnVendorID").val(VendorId);
                $("#txtVendorCode").val(VendorCode);
                $("#txtVendorName").val(VendorName);
                $("#txtVendor").val(VendorName);
                $("#ddlTitle").val(TitleID);
                $("#ddlTitle").material_select();
                $("#ddlCity").val(City);
                $("#ddlCity").material_select();
                $("#ddlState").val(State);
                $("#ddlState").material_select();
                $("#ddlCountry").val(Country);
                $("#ddlCountry").material_select();
                $("#txtGSTIN").val(GSTN);
                $("#txtAddress1").val(Address1);
                $("#txtAddress2").val(Address2);
                $("#txtAddress3").val(Address3);
                $("#txtPIN").val(PinCode);
                if (IsRegistered == "true") {
                    $("#cbIsregisteredVendor").prop('checked', true);
                }
                else {
                    $("#cbIsregisteredVendor").prop('checked', false);
                }
                $('#modalVendor111').modal('close');
            }
        });
        $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size
        //navButtons
        jQuery(grid_vendor).jqGrid('navGrid', grid_vendorPager,
            { 	//navbar options
                edit: false,
                editicon: 'ace-icon fa fa-pencil blue',
                add: false,
                addicon: 'ace-icon fa fa-plus-circle purple',
                del: false,
                delicon: 'ace-icon fa fa-trash-o red',
                search: true,
                searchicon: 'ace-icon fa fa-search orange',
                refresh: true,
                refreshicon: 'ace-icon fa fa-refresh green',
                view: false,
                viewicon: 'ace-icon fa fa-search-plus grey',
            },
            {

            },
            {

            },
            {

            },
            {
                //search form
                width: 650,
                recreateForm: true,
                sopt: ['cn'],
                afterShowSearch: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                    style_search_form(form);
                },
                afterRedraw: function () {
                    style_search_filters($(this));
                }
                // multipleSearch: true,
                /**
                multipleGroup:true,
                showQuery: true
                */
            },
            {

            }
        )
    }

    //function gridBindVendor(data) {

    //    var parent_column = $(grid_vendor).closest('[class*="col "]');
    //    //resize to fit page size
    //    $(window).on('resize.jqGrid', function () {
    //        $(grid_vendor).jqGrid('setGridWidth', parent_column.width());
    //    })

    //    //resize on sidebar collapse/expand
    //    $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
    //        if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
    //            //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
    //            setTimeout(function () {
    //                $(grid_vendor).jqGrid('setGridWidth', parent_column.width());
    //            }, 20);
    //        }
    //    });
    //    $(grid_vendor).jqGrid('GridUnload');
    //    jQuery(grid_vendor).jqGrid({
    //        datastr: data,
    //        datatype: "jsonstring",
    //        colNames: ['VendorID', 'TitleID', 'VendorName', 'NickName', 'VendorCode', 'Address1', 'Address2', 'Address3',
    //            'City', 'State', 'Country', 'PIN', 'GSTNumber', 'IsRegistered'],
    //        colModel: [
    //            { name: 'VendorID', index: 'VendorID', key: true, hidden: true },
    //            { name: 'TitleID', index: 'TitleID', hidden: true },
    //            { name: 'VendorName1', index: 'VendorName1', search: true },
    //            { name: 'NickName', index: 'NickName', search: true, hidden: true },
    //            { name: 'VendorAccountID', index: 'VendorAccountID', hidden: true },
    //            { name: 'Address1', index: 'Address1' },
    //            { name: 'Address2', index: 'Address2' },
    //            { name: 'Address3', index: 'Address3' },
    //            { name: 'City', index: 'City', hidden: true },
    //            { name: 'State', index: 'State', hidden: true },
    //            { name: 'Country', index: 'Country', hidden: true },
    //            { name: 'PIN', index: 'PIN', hidden: true },
    //            { name: 'GSTNumber', index: 'GSTNumber' },
    //            { name: 'IsRegistered', index: 'IsRegistered', hidden: true }
    //        ],
    //        viewrecords: true,
    //        rowNum: 10,
    //        rowList: [10, 20, 30],
    //        pager: grid_vendorPager,
    //        altRows: true,
    //        autowidth: true,
    //        ignoreCase: true,
    //        height: 250,
    //        loadComplete: function () {
    //            var table = this;
    //            setTimeout(function () {
    //                updatePagerIcons(table);
    //            }, 0);
    //        },
    //        gridComplete: function () {

    //            hideLoader();
    //        },
    //        editurl: "#",
    //        ondblClickRow: function () {

    //            sel_id = $('#grdVendor111').jqGrid('getGridParam', 'selrow');
    //            var VendorId = $('#grdVendor111').jqGrid('getCell', sel_id, 'VendorID');
    //            var VendorName = $('#grdVendor111').jqGrid('getCell', sel_id, 'VendorName1');
    //            var VendorCode = $('#grdVendor111').jqGrid('getCell', sel_id, 'VendorAccountID');
    //            var TitleID = $('#grdVendor111').jqGrid('getCell', sel_id, 'TitleID');
    //            var City = $('#grdVendor111').jqGrid('getCell', sel_id, 'City');
    //            var State = $('#grdVendor111').jqGrid('getCell', sel_id, 'State');
    //            var Country = $('#grdVendor111').jqGrid('getCell', sel_id, 'Country');
    //            var GSTN = $('#grdVendor111').jqGrid('getCell', sel_id, 'GSTNumber');
    //            var Address1 = $('#grdVendor111').jqGrid('getCell', sel_id, 'Address1');
    //            var Address2 = $('#grdVendor111').jqGrid('getCell', sel_id, 'Address2');
    //            var Address3 = $('#grdVendor111').jqGrid('getCell', sel_id, 'Address3');
    //            var PinCode = $('#grdVendor111').jqGrid('getCell', sel_id, 'PIN');
    //            var IsRegistered = $('#grdVendor111').jqGrid('getCell', sel_id, 'IsRegistered');

    //            $("#hdnVendorID").val(VendorId);
    //            $("#txtVendorCode").val(VendorCode);
    //            alert(VendorCode);
    //            if ($('#cbOneTimeVendor').is(':checked')) {
    //                $("#txtVendorName").val('');
    //            }
    //            else {
    //                $("#txtVendorName").val(VendorName);
    //            }
    //            $("#ddlTitle").val(TitleID);
    //            $("#ddlTitle").material_select();
    //            $("#ddlCity").val(City);
    //            $("#ddlCity").material_select();
    //            $("#ddlState").val(State);
    //            $("#ddlState").material_select();
    //            $("#ddlCountry").val(Country);
    //            $("#ddlCountry").material_select();
    //            $("#txtGSTIN").val(GSTN);
    //            $("#txtAddress1").val(Address1);
    //            $("#txtAddress2").val(Address2);
    //            $("#txtAddress3").val(Address3);
    //            $("#txtPIN").val(PinCode);
    //            if (IsRegistered == "true") {
    //                $("#cbIsregisteredVendor").prop('checked', true);
    //            }
    //            else {
    //                $("#cbIsregisteredVendor").prop('checked', false);
    //            }
    //             $('#modalVendor111').modal('close');
               
    //        }
    //    });
    //    $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size
    //    //navButtons
    //    jQuery(grid_vendor).jqGrid('navGrid', grid_vendorPager,
    //        { 	//navbar options
    //            edit: false,
    //            editicon: 'ace-icon fa fa-pencil blue',
    //            add: false,
    //            addicon: 'ace-icon fa fa-plus-circle purple',
    //            del: false,
    //            delicon: 'ace-icon fa fa-trash-o red',
    //            search: true,
    //            searchicon: 'ace-icon fa fa-search orange',
    //            refresh: true,
    //            refreshicon: 'ace-icon fa fa-refresh green',
    //            view: false,
    //            viewicon: 'ace-icon fa fa-search-plus grey',
    //        },
    //        {

    //        },
    //        {

    //        },
    //        {

    //        },
    //        {
    //            //search form
    //            width: 650,
    //            recreateForm: true,
    //            sopt: ['cn'],
    //            afterShowSearch: function (e) {
    //                var form = $(e[0]);
    //                form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
    //                style_search_form(form);
    //            },
    //            afterRedraw: function () {
    //                style_search_filters($(this));
    //            }
    //            // multipleSearch: true,
    //            /**
    //            multipleGroup:true,
    //            showQuery: true
    //            */
    //        },
    //        {

    //        }
    //    )
    //}

    //.....................

    function EditAccidentClaimEntry(data) {
        if (data != "") {
           
            //accident details
            $('#txtAccidentID').val(data[0].AccidentID);
            $('#txtSAPID').val(data[0].SAPID);
            $('#txtUnit').val(data[0].UnitName);
            $('#txtUnitID').val(data[0].UnitID);
            $('#txtUnitCode').val(data[0].UnitCode);
            $('#txtVendor').val(data[0].VendorName);
            $('#txtVendorID').val(data[0].SupplierID);
            $('#txtAccidentEntryID').val(data[0].AccidentEntryID);
            $('#txtVehicleNo').val(data[0].VehicleNo);
            $('#txtVehicleID').val(data[0].VehicleID);
            $('#txtAccidentDate').val(data[0].AccidentDateString);
            $('#txtClaimNo').val(data[0].ClaimReferenceNo);
            $('#txtClaimDate').val(data[0].ClaimDateString);
            $('#txtReferenceNo').val(data[0].ReferenceNo);
            $('#txtExpense').val(data[0].VehicleExpenses);
            $('#txtOtherAmount').val(data[0].OtherExpense);
            $('#txtClaimAmount').val(data[0].ClaimAmount);
            $('#txtRemarks').val(data[0].AccidentRemarks);

            // vendor details
            if (data[0].IsOneTimeVendor == 1)
                $("#cbOneTimeVendor").prop('checked', true);
            else
                $("#cbOneTimeVendor").prop('checked', false);
            $("#txtVendorCode").val(data[0].VendorCode);
            $("#hdnVendorID").val(data[0].VendorID);
            $("#ddlTitle").val(data[0].TitleID);
            $("#ddlTitle").material_select();
            $("#txtVendorName").val(data[0].VendorCode);
            if (data[0].IsRegisteredVendor == 1)
                $("#cbIsregisteredVendor").prop('checked', true);
            else
                $("#cbIsregisteredVendor").prop('checked', false);

            $("#txtGSTIN").val(data[0].GSTNumber);            
            $("#txtAddress1").val(data[0].Address1);
            $("#txtAddress2").val(data[0].Address2);
            $("#txtAddress3").val(data[0].Address3);  
            $("#txtPIN").val(data[0].PIN);
            $("#ddlCity").val(data[0].CityID);
            $("#ddlCity").material_select();
            $("#StateID").val(data[0].StateID);
            $("#StateID").material_select();
            $("#ddlCountry").val(data[0].CountryID);
            $("#ddlCountry").material_select(); 

            //sap details

            $("#hdnBusinessArea1Id").val(data[0].BusinessAreaID);
            $("#hdnBusinessArea1Code").val(data[0].BusinesAreaCode);
            $("#txtBusinessArea1").val(data[0].BussinessArea);
            $("#hdnBusinessArea2Id").val(data[0].BusinessAreaID2);
            $("#hdnBusinessArea2Code").val(data[0].BusinessAreaCode2); 
            $("#txtBusinessArea2").val(data[0].BussinessArea2);
            $("#hdnExpenseAccountId").val(data[0].SAPExpenseAccountID);
            $("#txtExpenseAccount").val(data[0].SAPExpenseAccount); 
            $("#hdnCostCenterId").val(data[0].CostCenterID);
            $("#hdnCostCenterCode").val(data[0].CostCenterCode);
            $("#txtCostCenter").val(data[0].CostCenter);
            $("#hdnInternalOrderId").val(data[0].InternalOrderID);  
            $("#hdnInternalOrderCode").val(data[0].InternalOrderCode);           
            $("#txtInternalOrder").val(data[0].InternalOrderID);
            $("#ddlPaymentMode").val(data[0].PaymentModeID);
            $("#ddlPaymentMode").material_select();  

        } $("#btnPaySlip").prop("hidden", false);
        $("#btnPrint").prop("hidden", false);
    }

    function deleteAccidentID(AccidentID) {
        var result = false;
        $.ajax({
            url: '../Accident/deleteAccidentID',
            type: 'POST',
            data: { AccidentID: AccidentID },
            success: function (data) {
                if (data > 0) {
                    message = '<p>Accident entry Deleted.<a>Pop up closes in 5 secs</a></p>',
                        type = 'notice';
                    showNotification(message, type);
                    Clear();
                    loadAccidentClaims();
                }
                else {
                    message = '<p>Accident entry deletion failed.<a>Pop up closes in 5 secs</a></p>',
                        type = 'error';
                    showNotification(message, type);
                }
            }
        });
    }

    function loadAccidentClaims() {
        $.ajax({
            type: "POST",
            url: "../Accident/loadAccidentClaims",
            success: function (data) {
                $(grid_Accident).jqGrid('GridUnload');
                gridbindAccidents(data);
            }
        });
    }

    function Clear() {        
        $("#txtUnit").val('');
        $("#txtUnitID").val(0);
        $("#txtUnitCode").val('');
        $("#txtVendor").val('');
        $("#txtVendorID").val('');
        $("#txtVendorCode").val('');
        $("#txtAccidentEntryID").val('');
        $("#txtAccidentID").val('');
        $("#txtVehicleNo").val('');
        $("#txtAccidentDate").val('');
        $("#txtClaimNo").val('');
        $("#txtClaimDate").val('');
        $("#txtReferenceNo").val('');
        $("#txtExpense").val('');
        $("#txtOtherAmount").val('');
        $("#txtClaimAmount").val('');
        $("#txtRemarks").val('');
        $("#btnPaySlip").prop("hidden", true);
        $("#btnPrint").prop("hidden", true);
        ClearVendor();
        ClearSap();
        $("#txtUnit").val($("#hdnCurrentUnit").val());
        $("#txtUnitID").val($("#hdnCurrentUnitID").val());
        $("#txtUnitCode").val($("#hdnCurrentUnitCode").val());
        loadbusinessarea();
        AccidentadvanceAccount();
    }

    function fieldValidation() {
        var isvalid = 1;
        removevalidations();

        if ($('#txtUnit').val() == '' || $('#txtUnit').val() == -1 || $('#txtUnit').val() == null) {
            isvalid = 0;
            $('#txtUnit').addClass("input-validation-error");
        }
        if ($('#txtVendor').val() == '' || $('#txtVendor').val() == -1 || $('#txtVendor').val() == null) {
            isvalid = 0;
            $('#txtVendor').addClass("input-validation-error");
        }
        if ($('#txtAccidentEntryID').val() == '' || $('#txtAccidentEntryID').val() == -1 || $('#txtAccidentEntryID').val() == null) {
            isvalid = 0;
            $('#txtAccidentEntryID').addClass("input-validation-error");
        }
        if ($('#txtClaimNo').val() == '' || $('#txtClaimNo').val() == -1 || $('#txtClaimNo').val() == null) {
            isvalid = 0;
            $('#txtClaimNo').addClass("input-validation-error");
        }
        if ($('#txtClaimDate').val() == '' || $('#txtClaimDate').val() == -1 || $('#txtClaimDate').val() == null) {
            isvalid = 0;
            $('#txtClaimDate').addClass("input-validation-error");
        }        
        if ($('#txtExpense').val() == '' || $('#txtExpense').val() == -1 || $('#txtExpense').val() == null) {
            isvalid = 0;
            $('#txtExpense').addClass("input-validation-error");
        }
        if ($('#txtClaimAmount').val() == '' || $('#txtClaimAmount').val() == -1 || $('#txtClaimAmount').val() == null) {
            isvalid = 0;
            $('#txtClaimAmount').addClass("input-validation-error");
        }
        if ($('#txtBusinessArea1').val() == '' || $('#txtBusinessArea1').val() == -1 || $('#txtBusinessArea1').val() == null) {
            isvalid = 0;
            $('#txtBusinessArea1').addClass("input-validation-error");
        }
        if ($('#txtExpenseAccount').val() == '' || $('#txtExpenseAccount').val() == -1 || $('#txtExpenseAccount').val() == null) {
            isvalid = 0;
            $('#txtExpenseAccount').addClass("input-validation-error");
        }
        
        if ($('#txtCostCenter').val() == '' || $('#txtCostCenter').val() == -1 || $('#txtCostCenter').val() == null) {
            isvalid = 0;
            $('#txtCostCenter').addClass("input-validation-error");
        }

        var accidentDate = new Date($('#txtAccidentDate').val());
        var claimdate = new Date($('#txtClaimDate').val());
        if (claimdate < accidentDate) {
            $('#txtAccidentDate').addClass("input-validation-error");
            $('#txtClaimDate').addClass("input-validation-error");
            isvalid = 0;
            message = '<p>Claim date should be greater than accident date.<a>Pop up closes in 5 secs</a></p>';
            type = 'warning';
            showNotification(message, type);           
        }
        
        return isvalid;
    }

    function removevalidations() {
        $('#txtUnit').removeClass("input-validation-error");
        $('#txtVendor').removeClass("input-validation-error");
        $('#txtAccidentEntryID').removeClass("input-validation-error");
        $('#txtClaimNo').removeClass("input-validation-error");
        $('#txtClaimDate').removeClass("input-validation-error");
        $('#txtClaimAmount').removeClass("input-validation-error");
        $('#txtBusinessArea1').removeClass("input-validation-error");
        $('#txtExpenseAccount').removeClass("input-validation-error");
      //  $('#txtCostCenter').removeClass("input-validation-error");
    }

    function CalcClaimAmount() {
        var expAmt = 0, Amt = 0, ClaimAmt = 0;
        if ($("#txtExpense").val() > 0) {
            expAmt = $("#txtExpense").val();
        }
        if ($("#txtOtherAmount").val() > 0) {
            Amt = $("#txtOtherAmount").val();
        }
        ClaimAmt = parseFloat(expAmt) + parseFloat(Amt);
        $("#txtClaimAmount").val(ClaimAmt);
    }


    //Hide Loader and show purchase order grid
    function hideLoader() {
        $("#loader_vendor").hide();
        $("#divVendor").show();
    }

    //Show Loader and show purchase order grid
    function showLoader() {
        $("#divVendor").hide();
        $("#loader_vendor").show();

    }

    function GetPaymentMode() {
        $.ajax({
            type: "POST",
            url: "../Purchase/GetPaymentMode",
            dataType: "json",
            success: function (PaymentMode) {
                var htmlPaymentMode = '<option value="">' + "----Select----" + '</option>';
                if (PaymentMode.length > 0) {

                    for (var j = 0; j < PaymentMode.length; j++) {
                        var key = PaymentMode[j].PaymentModeID;
                        var value = PaymentMode[j].PaymentMode;
                        htmlPaymentMode = htmlPaymentMode + '<option value=' + key + '>' + value + '</option>';
                    }
                }
                $('#ddlPaymentMode').html(htmlPaymentMode);
                $('#ddlPaymentMode').material_select();
            },

        });
    }   

    function ClearSap() {
        $('#hdnBusinessArea1Id').val('');
        $('#hdnBusinessArea1Code').val('');
        $('#txtBusinessArea1').val('');
        $('#hdnBusinessArea2Id').val('');
        $('#hdnBusinessArea2Code').val('');
        $('#txtBusinessArea2').val('');
        $('#hdnExpenseAccountId').val('');
        $('#hdnExpenseAccountNumber').val('');
        $('#txtExpenseAccount').val('');
        $('#hdnCostCenterId').val('');
        $('#hdnCostCenterCode').val('');
        $('#txtCostCenter').val('');
        $('#hdnInternalOrderId').val('');
        $('#hdnInternalOrderNumber').val('');
        $('#txtInternalOrder').val('');
        $('#ddlPaymentMode').val('');
        $('#ddlPaymentMode').material_select();
    } 

    //function gridBindVendor(data) {

    //    var parent_column = $(grid_vendor).closest('[class*="col "]');
    //    //resize to fit page size
    //    $(window).on('resize.jqGrid', function () {
    //        $(grid_vendor).jqGrid('setGridWidth', parent_column.width());
    //    })

    //    //resize on sidebar collapse/expand
    //    $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
    //        if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
    //            //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
    //            setTimeout(function () {
    //                $(grid_vendor).jqGrid('setGridWidth', parent_column.width());
    //            }, 20);
    //        }
    //    });
    //    $(grid_vendor).jqGrid('GridUnload');
    //    jQuery(grid_vendor).jqGrid({
    //        datastr: data,
    //        datatype: "jsonstring",
    //        colNames: ['VendorID', 'TitleID', 'VendorName', 'NickName', 'VendorCode', 'Address1', 'Address2', 'Address3',
    //            'City', 'State', 'Country', 'PIN', 'GSTNumber', 'IsRegistered'],
    //        colModel: [
    //            { name: 'VendorID', index: 'VendorID', key: true, hidden: true },
    //            { name: 'TitleID', index: 'TitleID', hidden: true },
    //            { name: 'VendorName1', index: 'VendorName1', search: true },
    //            { name: 'NickName', index: 'NickName', search: true, hidden: true },
    //            { name: 'VendorAccountID', index: 'VendorAccountID', hidden: true },
    //            { name: 'Address1', index: 'Address1' },
    //            { name: 'Address2', index: 'Address2' },
    //            { name: 'Address3', index: 'Address3' },
    //            { name: 'City', index: 'City', hidden: true },
    //            { name: 'State', index: 'State', hidden: true },
    //            { name: 'Country', index: 'Country', hidden: true },
    //            { name: 'PIN', index: 'PIN', hidden: true },
    //            { name: 'GSTNumber', index: 'GSTNumber' },
    //            { name: 'IsRegistered', index: 'IsRegistered', hidden: true }
    //        ],
    //        viewrecords: true,
    //        rowNum: 10,
    //        rowList: [10, 20, 30],
    //        pager: grid_vendorPager,
    //        altRows: true,
    //        autowidth: true,
    //        ignoreCase: true,
    //        height: 250,
    //        loadComplete: function () {
    //            var table = this;
    //            setTimeout(function () {
    //                updatePagerIcons(table);
    //            }, 0);
    //        },
    //        gridComplete: function () {
    //            hideLoader();
    //        },
    //        editurl: "#",
    //        ondblClickRow: function () {

    //            sel_id = $('#grdVendor111').jqGrid('getGridParam', 'selrow');
    //            var VendorId = $('#grdVendor111').jqGrid('getCell', sel_id, 'VendorID');
    //            var VendorName = $('#grdVendor111').jqGrid('getCell', sel_id, 'VendorName1');
    //            var VendorCode = $('#grdVendor111').jqGrid('getCell', sel_id, 'VendorAccountID');
    //            var TitleID = $('#grdVendor111').jqGrid('getCell', sel_id, 'TitleID');
    //            var City = $('#grdVendor111').jqGrid('getCell', sel_id, 'City');
    //            var State = $('#grdVendor111').jqGrid('getCell', sel_id, 'State');
    //            var Country = $('#grdVendor111').jqGrid('getCell', sel_id, 'Country');
    //            var GSTN = $('#grdVendor111').jqGrid('getCell', sel_id, 'GSTNumber');
    //            var Address1 = $('#grdVendor111').jqGrid('getCell', sel_id, 'Address1');
    //            var Address2 = $('#grdVendor111').jqGrid('getCell', sel_id, 'Address2');
    //            var Address3 = $('#grdVendor111').jqGrid('getCell', sel_id, 'Address3');
    //            var PinCode = $('#grdVendor111').jqGrid('getCell', sel_id, 'PIN');
    //            var IsRegistered = $('#grdVendor111').jqGrid('getCell', sel_id, 'IsRegistered');

    //            alert(VendorCode);

    //            $("#hdnVendorID").val(VendorId);
    //            $("#txtVendorCode").val(VendorCode);
    //            $("#txtVendorName").val(VendorName);
    //            $("#txtVendor").val(VendorName);
    //            $("#ddlTitle").val(TitleID);
    //            $("#ddlTitle").material_select();
    //            $("#ddlCity").val(City);
    //            $("#ddlCity").material_select();
    //            $("#ddlState").val(State);
    //            $("#ddlState").material_select();
    //            $("#ddlCountry").val(Country);
    //            $("#ddlCountry").material_select();
    //            $("#txtGSTIN").val(GSTN);
    //            $("#txtAddress1").val(Address1);
    //            $("#txtAddress2").val(Address2);
    //            $("#txtAddress3").val(Address3);
    //            $("#txtPIN").val(PinCode);
    //            if (IsRegistered == "true") {
    //                $("#cbIsregisteredVendor").prop('checked', true);
    //            }
    //            else {
    //                $("#cbIsregisteredVendor").prop('checked', false);
    //            }
    //            $('#modalVendor111').modal('close');
    //        }
    //    });
    //    $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size
    //    //navButtons
    //    jQuery(grid_vendor).jqGrid('navGrid', grid_vendorPager,
    //        { 	//navbar options
    //            edit: false,
    //            editicon: 'ace-icon fa fa-pencil blue',
    //            add: false,
    //            addicon: 'ace-icon fa fa-plus-circle purple',
    //            del: false,
    //            delicon: 'ace-icon fa fa-trash-o red',
    //            search: true,
    //            searchicon: 'ace-icon fa fa-search orange',
    //            refresh: true,
    //            refreshicon: 'ace-icon fa fa-refresh green',
    //            view: false,
    //            viewicon: 'ace-icon fa fa-search-plus grey',
    //        },
    //        {

    //        },
    //        {

    //        },
    //        {

    //        },
    //        {
    //            //search form
    //            width: 650,
    //            recreateForm: true,
    //            sopt: ['cn'],
    //            afterShowSearch: function (e) {
    //                var form = $(e[0]);
    //                form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
    //                style_search_form(form);
    //            },
    //            afterRedraw: function () {
    //                style_search_filters($(this));
    //            }
    //            // multipleSearch: true,
    //            /**
    //            multipleGroup:true,
    //            showQuery: true
    //            */
    //        },
    //        {

    //        }
    //    )
    //}

   

    function gridBindUnitData(data) {
        var parent_column = $(grid_Unit).closest('[class*="col-"]');
        //resize to fit page size
        $(window).on('resize.jqGrid', function () {
            $(grid_Unit).jqGrid('setGridWidth', parent_column.width());
        })
        //resize on sidebar collapse/expand
        $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
            if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                setTimeout(function () {
                    $(grid_Unit).jqGrid('setGridWidth', parent_column.width());
                }, 20);
            }
        })
        jQuery(grid_Unit).jqGrid('GridUnload');
        jQuery(grid_Unit).jqGrid({
            datastr: data,
            datatype: "jsonstring",
            //  height: 250,
            colNames: ['ID', 'Unit Code', 'Unit'],
            colModel: [
                { name: 'UnitID', index: 'UnitID', key: true, hidden: true },
                { name: 'Code', index: 'Code' },
                { name: 'Unit', index: 'Unit' }

            ],

            viewrecords: true,
            ignoreCase: true,
            rowNum: 10,
            rowList: [10, 20, 30],
            pager: pager_Unit,
            altRows: true,
            height: 400,
            multiselect: false,
            multiboxonly: true,
            ondblClickRow: function (rowId) {
                var rowData = jQuery(this).getRowData(rowId);
                UnitID = rowData['UnitID'];
                Unit = rowData['Unit'];
                Code = rowData['Code'];

                if (Code != null && Code != "") {
                    $("#txtUnit").val(Unit);
                    $("#txtUnitID").val(UnitID);
                    $("#txtUnitCode").val(Code);
                    $("#txtVehicleNo").val('');
                    $("#hdnVehicleID").val('');
                    $('#txtUnit').removeClass("input-validation-error");
                    $('#modalUnitDetails').modal('close'); // Close popup
                }
                else {

                }
            },
            loadComplete: function () {
                var table = this;
                setTimeout(function () {
                    updatePagerIcons(table);
                }, 0);
            },
            gridComplete: function () {

                $(grid_Unit + "_cb").css("width", "35px");
                $(grid_Unit + " tbody tr").children().first("td").css("width", "35px");
            },


        });

        $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size

        jQuery(grid_Unit).jqGrid('navGrid', pager_Unit,
            { 	//navbar options
                edit: false,
                editicon: 'ace-icon fa fa-pencil blue',
                add: false,
                addicon: 'ace-icon fa fa-plus-circle purple',
                del: false,
                delicon: 'ace-icon fa fa-trash-o red',
                search: true,
                searchicon: 'ace-icon fa fa-search orange',
                refresh: true,
                refreshicon: 'ace-icon fa fa-refresh green',
                view: false,
                viewicon: 'ace-icon fa fa-search-plus grey',
            },
            {
                //edit record form
                //closeAfterEdit: true,
                //width: 700,
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    //   style_edit_form(form);
                }
            },
            {
                //new record form
                //width: 700,
                closeAfterAdd: true,
                recreateForm: true,
                viewPagerButtons: false,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar')
                        .wrapInner('<div class="widget-header" />')
                    //  style_edit_form(form);
                }
            },
            {
                //delete record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    if (form.data('styled')) return false;

                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    // style_delete_form(form);

                    form.data('styled', true);
                },
                onClick: function (e) {
                    //alert(1);
                }
            },
            {
                //search form
                recreateForm: true,
                sopt: ['cn'],
                afterShowSearch: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                    //style_search_form(form);
                },
                afterRedraw: function () {
                    // style_search_filters($(this));
                }
                ,
                //  multipleSearch: true,
                closeAfterSearch: true
            },
            {
                //view record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                }
            }
        )

    }
    
    function gridBindAccidentIDDetails(data) {       
        var parent_column = $(grid_AccidentID).closest('[class*="col-"]');
        //resize to fit page size
        $(window).on('resize.jqGrid', function () {
            $(grid_AccidentID).jqGrid('setGridWidth', parent_column.width());
        })
        //resize on sidebar collapse/expand
        $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
            if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                setTimeout(function () {
                    $(grid_AccidentID).jqGrid('setGridWidth', parent_column.width());
                }, 20);
            }
        })
        jQuery(grid_AccidentID).jqGrid('GridUnload');
        jQuery(grid_AccidentID).jqGrid({
            datastr: data,
            datatype: "jsonstring",
            //  height: 250,
            colNames: ['ID', 'Accident ID', 'VehicleNo', 'Vehicle ID', 'Accident Date'],
            colModel: [
                { name: 'AccidentID', index: 'AccidentID', key: true, hidden: true },
                { name: 'AccidentEntryID', index: 'AccidentEntryID' },
                { name: 'VehicleNo', index: 'VehicleNo' },
                { name: 'VehicleID', index: 'VehicleID', hidden: true },
                { name: 'AccidentDateString', index: 'AccidentDateString' }

            ],

            viewrecords: true,
            ignoreCase: true,
            rowNum: 10,
            rowList: [10, 20, 30],
            pager: pager_AccidentID,
            altRows: true,
            height: 400,
            multiselect: false,
            multiboxonly: true,
            ondblClickRow: function (rowId) {
                var rowData = jQuery(this).getRowData(rowId);
                AccidentID = rowData['AccidentID'];
                AccidentEntryID = rowData['AccidentEntryID'];
                VehicleNo = rowData['VehicleNo'];
                VehicleID = rowData['VehicleID'];
                AccidentDateString = rowData['AccidentDateString'];

                if (AccidentEntryID != null && AccidentEntryID != "") {
                    $("#txtAccidentID").val(AccidentID);
                    $("#txtAccidentEntryID").val(AccidentEntryID);
                    $("#txtVehicleNo").val(VehicleNo);
                    $("#txtVehicleID").val(VehicleID);
                    $("#txtAccidentDate").val(AccidentDateString);
                    $('#txtAccidentEntryID').removeClass("input-validation-error");
                    $('#modalAccidentIDDetails').modal('close'); // Close popup

                }
                else {

                }
            },
            loadComplete: function () {
                var table = this;
                setTimeout(function () {
                    updatePagerIcons(table);
                }, 0);
            },
            gridComplete: function () {

                $(grid_AccidentID + "_cb").css("width", "35px");
                $(grid_AccidentID + " tbody tr").children().first("td").css("width", "35px");
            },


        });

        $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size

        jQuery(grid_AccidentID).jqGrid('navGrid', pager_AccidentID,
            { 	//navbar options
                edit: false,
                editicon: 'ace-icon fa fa-pencil blue',
                add: false,
                addicon: 'ace-icon fa fa-plus-circle purple',
                del: false,
                delicon: 'ace-icon fa fa-trash-o red',
                search: true,
                searchicon: 'ace-icon fa fa-search orange',
                refresh: true,
                refreshicon: 'ace-icon fa fa-refresh green',
                view: false,
                viewicon: 'ace-icon fa fa-search-plus grey',
            },
            {
                //edit record form
                //closeAfterEdit: true,
                //width: 700,
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    //   style_edit_form(form);
                }
            },
            {
                //new record form
                //width: 700,
                closeAfterAdd: true,
                recreateForm: true,
                viewPagerButtons: false,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar')
                        .wrapInner('<div class="widget-header" />')
                    //  style_edit_form(form);
                }
            },
            {
                //delete record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    if (form.data('styled')) return false;

                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    // style_delete_form(form);

                    form.data('styled', true);
                },
                onClick: function (e) {
                    //alert(1);
                }
            },
            {
                //search form
                recreateForm: true,
                sopt: ['cn'],
                afterShowSearch: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                    //style_search_form(form);
                },
                afterRedraw: function () {
                    // style_search_filters($(this));
                }
                ,
                //  multipleSearch: true,
                closeAfterSearch: true
            },
            {
                //view record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                }
            }
        )

    }


    function gridBindBusinessAreas(data, status) {

        var parent_column = $(grid_BusinessArea).closest('[class*="col-"]');
        //resize to fit page size
        $(window).on('resize.jqGrid', function () {
            $(grid_BusinessArea).jqGrid('setGridWidth', parent_column.width());
        });
        //resize on sidebar collapse/expand
        $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
            if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                setTimeout(function () {
                    $(grid_BusinessArea).jqGrid('setGridWidth', parent_column.width());
                }, 20);
            }
        });
        jQuery(grid_BusinessArea).jqGrid('GridUnload');
        jQuery(grid_BusinessArea).jqGrid({
            datastr: data,
            datatype: "jsonstring",
            //  height: 250,
            colNames: ['ID', 'Code', 'Name'],
            colModel: [
                { name: 'BusinessAreaID', index: 'BusinessAreaID', key: true, hidden: true },
                { name: 'BusinessAreaCode', index: 'BusinessAreaCode' },
                { name: 'BusinessAreaName', index: 'BusinessAreaName' }
            ],
            viewrecords: true,
            ignoreCase: true,
            rowNum: 10,
            rowList: [10, 20, 30],
            pager: pager_BusinessArea,
            altRows: true,
            height: 400,
            multiselect: false,
            multiboxonly: true,
            ondblClickRow: function (rowId) {
                var rowData = jQuery(this).getRowData(rowId);
                BusinessAreaID = rowData['BusinessAreaID'];
                BusinessAreaCode = rowData['BusinessAreaCode'];
                BusinessAreaName = rowData['BusinessAreaName'];
                if (BusinessAreaID != null && BusinessAreaID != "") {
                    if (status == 1) {
                        $("#hdnBusinessArea1Id").val(BusinessAreaID);
                        $("#hdnBusinessArea1Code").val(BusinessAreaCode);
                        $("#txtBusinessArea1").val(BusinessAreaName);
                        $('#txtBusinessArea1').removeClass("input-validation-error");
                    }
                    if (status == 2) {
                        $("#hdnBusinessArea2Id").val(BusinessAreaID);
                        $("#hdnBusinessArea2Code").val(BusinessAreaCode);
                        $("#txtBusinessArea2").val(BusinessAreaName);
                        $('#txtBusinessArea2').removeClass("input-validation-error");
                    }
                    $('#modalBusinessArea').modal('close'); // Close popup
                }
            },
            loadComplete: function () {
                var table = this;
                setTimeout(function () {
                    updatePagerIcons(table);
                }, 0);
            },
            gridComplete: function () {
                $(grid_BusinessArea + "_cb").css("width", "35px");
                $(grid_BusinessArea + " tbody tr").children().first("td").css("width", "35px");
            },
        });
        $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size
        jQuery(grid_BusinessArea).jqGrid('navGrid', pager_BusinessArea,
            { 	//navbar options
                edit: false,
                editicon: 'ace-icon fa fa-pencil blue',
                add: false,
                addicon: 'ace-icon fa fa-plus-circle purple',
                del: false,
                delicon: 'ace-icon fa fa-trash-o red',
                search: true,
                searchicon: 'ace-icon fa fa-search orange',
                refresh: true,
                refreshicon: 'ace-icon fa fa-refresh green',
                view: false,
                viewicon: 'ace-icon fa fa-search-plus grey',
            },
            {
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />');
                }
            },
            {
                closeAfterAdd: true,
                recreateForm: true,
                viewPagerButtons: false,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar')
                        .wrapInner('<div class="widget-header" />');
                }
            },
            {
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    if (form.data('styled')) return false;
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />');
                    form.data('styled', true);
                },
                onClick: function (e) {
                }
            },
            {
                recreateForm: true,
                sopt: ['cn'],
                afterShowSearch: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />');
                },
                afterRedraw: function () {
                },
                closeAfterSearch: true
            },
            {
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />');
                }
            }
        );
    }

    function gridBindExpenseAccount(data) {        

        var parent_column = $(grid_ExpenseOrder).closest('[class*="col-"]');
        //resize to fit page size
        $(window).on('resize.jqGrid', function () {
            $(grid_ExpenseOrder).jqGrid('setGridWidth', parent_column.width());
        });
        //resize on sidebar collapse/expand
        $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
            if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                setTimeout(function () {
                    $(grid_ExpenseOrder).jqGrid('setGridWidth', parent_column.width());
                }, 20);
            }
        });
        jQuery(grid_ExpenseOrder).jqGrid('GridUnload');
        jQuery(grid_ExpenseOrder).jqGrid({
            datastr: data,
            datatype: "jsonstring",
            //  height: 250,
            colNames: ['ID', 'Expense Account Number', 'Expense Account'],
            colModel: [
                { name: 'GLAccountId', index: 'GLAccountId', key: true, hidden: true },
                { name: 'GLAccountNumber', index: 'GLAccountNumber' },
                { name: 'GLAccountLongDesc', index: 'GLAccountLongDesc' }
            ],
            viewrecords: true,
            ignoreCase: true,
            rowNum: 10,
            rowList: [10, 20, 30],
            pager: pager_ExpenseOrder,
            altRows: true,
            height: 400,
            multiselect: false,
            multiboxonly: true,
            ondblClickRow: function (rowId) {
                var rowData = jQuery(this).getRowData(rowId);
                GLAccountNumber = rowData['GLAccountNumber'];
                GLAccountId = rowData['GLAccountId'];
                GLAccountLongDesc = rowData['GLAccountLongDesc'];
                if (GLAccountNumber != null && GLAccountNumber != "") {
                    $("#hdnExpenseAccountId").val(GLAccountId);
                    $("#hdnExpenseAccountNumber").val(GLAccountNumber);
                    $("#txtExpenseAccount").val(GLAccountLongDesc);
                    $('#txtExpenseAccount').removeClass("input-validation-error");
                    $('#modalExpenseAccount1').modal('close'); // Close popup
                }
            },
            loadComplete: function () {
                var table = this;
                setTimeout(function () {
                    updatePagerIcons(table);
                }, 0);
            },
            gridComplete: function () {
                $(grid_ExpenseOrder + "_cb").css("width", "35px");
                $(grid_ExpenseOrder + " tbody tr").children().first("td").css("width", "35px");
            },
        });
        $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size
        jQuery(grid_ExpenseOrder).jqGrid('navGrid', pager_ExpenseOrder,
            { 	//navbar options
                edit: false,
                editicon: 'ace-icon fa fa-pencil blue',
                add: false,
                addicon: 'ace-icon fa fa-plus-circle purple',
                del: false,
                delicon: 'ace-icon fa fa-trash-o red',
                search: true,
                searchicon: 'ace-icon fa fa-search orange',
                refresh: true,
                refreshicon: 'ace-icon fa fa-refresh green',
                view: false,
                viewicon: 'ace-icon fa fa-search-plus grey',
            },
            {
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />');
                }
            },
            {
                closeAfterAdd: true,
                recreateForm: true,
                viewPagerButtons: false,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar')
                        .wrapInner('<div class="widget-header" />');
                }
            },
            {
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    if (form.data('styled')) return false;
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />');
                    form.data('styled', true);
                },
                onClick: function (e) {
                }
            },
            {
                recreateForm: true,
                sopt: ['cn'],
                afterShowSearch: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />');
                },
                afterRedraw: function () {
                },
                closeAfterSearch: true
            },
            {
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />');
                }
            }
        );
    }

    function gridBindCostCenter(data) {

        var parent_column = $(grid_CostCenter).closest('[class*="col-"]');
        //resize to fit page size
        $(window).on('resize.jqGrid', function () {
            $(grid_CostCenter).jqGrid('setGridWidth', parent_column.width());
        });
        //resize on sidebar collapse/expand
        $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
            if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                setTimeout(function () {
                    $(grid_CostCenter).jqGrid('setGridWidth', parent_column.width());
                }, 20);
            }
        });
        jQuery(grid_CostCenter).jqGrid('GridUnload');
        jQuery(grid_CostCenter).jqGrid({
            datastr: data,
            datatype: "jsonstring",
            //  height: 250,
            colNames: ['ID', 'Cost Center Code', 'Cost Center'],
            colModel: [
                { name: 'CostCenterID', index: 'CostCenterID', key: true, hidden: true },
                { name: 'CostCenterCode', index: 'CostCenterCode', search: true },
                { name: 'CostCenterDesc', index: 'CostCenterDesc', search: true}
            ],
            viewrecords: true,
            rowNum: 8,
            rownumbers: false,
            rowList: [8, 20, 30],
            pager: pager_CostCenter,
            altRows: true,
            multiselect: false,
            loadonce: true,
            subGrid: false,
            height: 255,
            ignoreCase: true,
            //multikey: "ctrlKey",
            multiboxonly: true,

            ondblClickRow: function () {
                //var rowData = jQuery(this).getRowData(rowId);
                //CostCenterID = rowData['CostCenterID'];
                //CostCenterCode = rowData['CostCenterCode'];
                //CostCenterDesc = rowData['CostCenterDesc'];

                var sel_id = $(grid_CostCenter).jqGrid('getGridParam', 'selrow');
                if (sel_id != null) {

                    var CostCenterID = $(grid_CostCenter).jqGrid('getCell', sel_id, 'CostCenterID');
                    var CostCenterCode = $(grid_CostCenter).jqGrid('getCell', sel_id, 'CostCenterCode');
                    var CostCenterDesc = $(grid_CostCenter).jqGrid('getCell', sel_id, 'CostCenterDesc');
                    $("#hdnCostCenterId").val(CostCenterID);
                    $("#hdnCostCenterCode").val(CostCenterCode);
                    $("#txtCostCenter").val(CostCenterDesc);
                    $('#txtCostCenter').removeClass("input-validation-error");
                    $('#modalCostCenter1').modal('close'); // Close popup
                }
            },
            loadComplete: function () {
                var table = this;
                setTimeout(function () {
                    updatePagerIcons(table);
                }, 0);
            },
            gridComplete: function () {
                $(grid_CostCenter + "_cb").css("width", "35px");
                $(grid_CostCenter + " tbody tr").children().first("td").css("width", "35px");
            },
        });
        $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size
        jQuery(grid_CostCenter).jqGrid('navGrid', pager_CostCenter,
            { 	//navbar options
                edit: false,
                editicon: 'ace-icon fa fa-pencil blue',
                add: false,
                addicon: 'ace-icon fa fa-plus-circle purple',
                del: false,
                delicon: 'ace-icon fa fa-trash-o red',
                search: true,
                searchicon: 'ace-icon fa fa-search orange',
                refresh: true,
                refreshicon: 'ace-icon fa fa-refresh green',
                view: false,
                viewicon: 'ace-icon fa fa-search-plus grey',
            },
            {
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />');
                }
            },
            {
                closeAfterAdd: true,
                recreateForm: true,
                viewPagerButtons: false,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar')
                        .wrapInner('<div class="widget-header" />');
                }
            },
            {
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    if (form.data('styled')) return false;
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />');
                    form.data('styled', true);
                },
                onClick: function (e) {
                }
            },
            {
                recreateForm: true,
                sopt: ['cn'],
                afterShowSearch: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />');
                },
                afterRedraw: function () {
                },
                closeAfterSearch: true
            },
            {
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />');
                }
            }
        );
    }

    function gridBindInternalOrders(data) {

        var parent_column = $(grid_InternalOrder).closest('[class*="col-"]');
        //resize to fit page size
        $(window).on('resize.jqGrid', function () {
            $(grid_InternalOrder).jqGrid('setGridWidth', parent_column.width());
        });
        //resize on sidebar collapse/expand
        $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
            if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                setTimeout(function () {
                    $(grid_InternalOrder).jqGrid('setGridWidth', parent_column.width());
                }, 20);
            }
        });
        jQuery(grid_InternalOrder).jqGrid('GridUnload');
        jQuery(grid_InternalOrder).jqGrid({
            datastr: data,
            datatype: "jsonstring",
            //  height: 250,
            colNames: ['ID', 'Internal Order Number', 'Internal Order'],
            colModel: [
                { name: 'InternalOrderId', index: 'InternalOrderId', key: true, hidden: true },
                { name: 'OrderNumber', index: 'OrderNumber' },
                { name: 'InternalOrderdesc', index: 'InternalOrderdesc' }
            ],
            viewrecords: true,
            ignoreCase: true,
            rowNum: 10,
            rowList: [10, 20, 30],
            pager: pager_InternalOrder,
            altRows: true,
            height: 400,
            multiselect: false,
            multiboxonly: true,
            ondblClickRow: function (rowId) {
                var rowData = jQuery(this).getRowData(rowId);
                InternalOrderId = rowData['InternalOrderId'];
                OrderNumber = rowData['OrderNumber'];
                InternalOrderdesc = rowData['InternalOrderdesc'];
                if (OrderNumber != null && OrderNumber != "") {
                    $("#hdnInternalOrderId").val(InternalOrderId);
                    $("#hdnInternalOrderNumber").val(OrderNumber);
                    $("#txtInternalOrder").val(InternalOrderdesc);
                    $('#txtInternalOrder').removeClass("input-validation-error");
                    $('#modalInternalOrder1').modal('close'); // Close popup
                }
            },
            loadComplete: function () {
                var table = this;
                setTimeout(function () {
                    updatePagerIcons(table);
                }, 0);
            },
            gridComplete: function () {
                $(grid_InternalOrder + "_cb").css("width", "35px");
                $(grid_InternalOrder + " tbody tr").children().first("td").css("width", "35px");
            },
        });
        $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size
        jQuery(grid_InternalOrder).jqGrid('navGrid', pager_InternalOrder,
            { 	//navbar options
                edit: false,
                editicon: 'ace-icon fa fa-pencil blue',
                add: false,
                addicon: 'ace-icon fa fa-plus-circle purple',
                del: false,
                delicon: 'ace-icon fa fa-trash-o red',
                search: true,
                searchicon: 'ace-icon fa fa-search orange',
                refresh: true,
                refreshicon: 'ace-icon fa fa-refresh green',
                view: false,
                viewicon: 'ace-icon fa fa-search-plus grey',
            },
            {
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />');
                }
            },
            {
                closeAfterAdd: true,
                recreateForm: true,
                viewPagerButtons: false,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar')
                        .wrapInner('<div class="widget-header" />');
                }
            },
            {
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    if (form.data('styled')) return false;
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />');
                    form.data('styled', true);
                },
                onClick: function (e) {
                }
            },
            {
                recreateForm: true,
                sopt: ['cn'],
                afterShowSearch: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />');
                },
                afterRedraw: function () {
                },
                closeAfterSearch: true
            },
            {
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />');
                }
            }
        );
    }

    function gridbindAccidents(data) {
        var parent_column = $(grid_Accident).closest('[class*="col-"]');
        //resize to fit page size
        $(window).on('resize.jqGrid', function () {
            $(grid_Accident).jqGrid('setGridWidth', parent_column.width());
        })

        //resize on sidebar collapse/expand
        $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
            if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                setTimeout(function () {
                    $(grid_Accident).jqGrid('setGridWidth', parent_column.width());
                }, 20);
            }
        })
        jQuery(grid_Accident).jqGrid('GridUnload');
        jQuery(grid_Accident).jqGrid({
            datastr: data,
            datatype: "jsonstring",
            //  height: 250,l
            colNames: ['ID', 'Unit Name', 'Accident ID', 'Vehicle ID', 'Vehicle Number', 'Accident Date',
                'Vendor', 'Claim Date', 'Claim Amount','Sappost', ''],
            colModel: [
                { name: 'AccidentID', index: 'AccidentID', key: true, hidden: true },
                { name: 'UnitName', index: 'UnitName' },
                { name: 'AccidentEntryID', index: 'AccidentEntryID' },
                { name: 'VehicleID', index: 'VehicleID', hidden: true },
                { name: 'VehicleNo', index: 'VehicleNo' },
                { name: 'AccidentDateString', index: 'AccidentDateString' },
                { name: 'VendorName', index: 'VendorName' },
                { name: 'ClaimDateString', index: 'ClaimDateString' },
                { name: 'ClaimAmount', index: 'ClaimAmount' },
                { name: 'SAPPost', index: 'SAPPost', hidden: true },

                //{ name: 'edit', index: 'edit', search: false, width: 40, formatter: Link }

                {
                    name: 'edit', index: 'edit', width: 40, search: false, formatter: function (cellvalue, options, rowObject) {

                        if (rowObject.SAPPost == "0") {
                            return '<a class="edit" href="javascript:void(0)" AccidentID="' + rowObject.AccidentID + '"><span class="ace-icon fa fa-pencil blue"></span></a><a class="remove" href="javascript:void(0)" AccidentID="' + rowObject.AccidentID + '"><span class="ace-icon fa fa-trash-o red"></a>';
                        }
                        else {
                            return '';
                        }
                    }
                }

            ],

            viewrecords: true,
            ignoreCase: true,
            rowNum: 10,
            rowList: [10, 20, 30],
            pager: pager_Accident,
            altRows: true,
            multiselect: false,
            multiboxonly: true,
            loadComplete: function () {
                var table = this;
                setTimeout(function () {
                    updatePagerIcons(table);
                }, 0);
            },
            gridComplete: function () {
                $(grid_Accident + "_cb").css("width", "35px");
                $(grid_Accident + " tbody tr").children().first("td").css("width", "35px");
            },

            caption: "Accident Claim Details"

        });

        $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size

        jQuery(grid_Accident).jqGrid('navGrid', pager_Accident,
            { 	//navbar options
                edit: false,
                editicon: 'ace-icon fa fa-pencil blue',
                add: false,
                addicon: 'ace-icon fa fa-plus-circle purple',
                del: false,
                delicon: 'ace-icon fa fa-trash-o red',
                search: true,
                searchicon: 'ace-icon fa fa-search orange',
                refresh: true,
                refreshicon: 'ace-icon fa fa-refresh green',
                view: false,
                viewicon: 'ace-icon fa fa-search-plus grey',
            },
            {
                //edit record form
                //closeAfterEdit: true,
                //width: 700,
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    //   style_edit_form(form);
                }
            },
            {
                //new record form
                //width: 700,
                closeAfterAdd: true,
                recreateForm: true,
                viewPagerButtons: false,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar')
                        .wrapInner('<div class="widget-header" />')
                    //  style_edit_form(form);
                }
            },
            {
                //delete record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    if (form.data('styled')) return false;

                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
                    // style_delete_form(form);

                    form.data('styled', true);
                },
                onClick: function (e) {
                    //alert(1);
                }
            },
            {
                //search form
                recreateForm: true,
                sopt: ['cn'],
                afterShowSearch: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                    //style_search_form(form);
                },
                afterRedraw: function () {
                    // style_search_filters($(this));
                }
                ,
                //  multipleSearch: true,
                closeAfterSearch: true
            },
            {
                //view record form
                recreateForm: true,
                beforeShowForm: function (e) {
                    var form = $(e[0]);
                    form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
                }
            }
        )


        function Link(cellvalue, options, rowObject) {
            // on grid edit click 
            var dataj = JSON.stringify(rowObject);

            var link = '<a href="javascript:void(0)" class="edit"><span class="ace-icon fa fa-pencil blue"></span></a><a href="javascript:void(0)" class="remove" style="margin-left: 3px;" ><span class="ace-icon fa fa-trash-o red"></span></a>'
            return link;


        }

    }

    function updatePagerIcons(table) {
        var replacement =
            {
                'ui-icon-seek-first': 'ace-icon fa fa-angle-double-left bigger-140',
                'ui-icon-seek-prev': 'ace-icon fa fa-angle-left bigger-140',
                'ui-icon-seek-next': 'ace-icon fa fa-angle-right bigger-140',
                'ui-icon-seek-end': 'ace-icon fa fa-angle-double-right bigger-140'
            };
        $('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function () {
            var icon = $(this);
            var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
            if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);
        })
    }
    //..Functions ...
    // default business area
    function loadbusinessarea() {
        var UnitID = $("#hdnCurrentUnitID").val();
        $.ajax({
            type: "POST",
            url: "../Accident/FetchDefaultBusinessArea",
            data: { UnitID, UnitID },
            success: function (data) {
                if (data.length > 0) {
                    $("#hdnBusinessArea1Id").val(data[0].BusinessAreaID);
                    $("#hdnBusinessArea1Code").val(data[0].BusinessAreaCode);
                    $("#txtBusinessArea1").val(data[0].BusinessAreaName);
                    $("#hdnBusinessArea2Id").val(data[0].BusinessAreaID);
                    $("#hdnBusinessArea2Code").val(data[0].BusinessAreaCode);
                    $("#txtBusinessArea2").val(data[0].BusinessAreaName);
                    $("#txtBusinessArea1").prop("disabled", true);
                }
            }
        });
    }
    //AccidentadvanceAccount
    function AccidentadvanceAccount() {
        var UnitID = $("#hdnCurrentUnitID").val();
        $.ajax({
            type: "POST",
            url: "../Accident/FetchAccidentadvanceAccount",
            data: { UnitID, UnitID },
            success: function (data) {
                if (data.length > 0) {
                    $("#hdnExpenseAccountId").val(data[0].AdvanceDebitAccountID);
                    $("#txtExpenseAccount").val(data[0].AdvanceDebitAccount);
                }
            }
        });
    }
});


AccidentController.cs
=====================
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using SAPPERI.Model.ViewModel;
using SAPPERI.Model.SeviceModel;
using Framework.Web;
using SAPPERI.Biz;
using SAPPERI.Model.Model;
using SAPPERI.Service;

namespace SAPPERI.VMS.Controllers
{
    using WebMarkupMin.AspNet4.Mvc;

    [CompressContent]
    [MinifyHtml]
    public class AccidentController : Controller
    {
        private readonly AccidentEntryManager _accidententrymanager;
        private readonly AccidentClaimManager _accidentclaimmanager;
        private readonly AccidentClaimApprovalManager _accidentclaimapprovalmanager;
        private readonly SAPManager _sapmanager;
        private readonly LookupManager _objLookupManager;
        private readonly SAPPeriIMService _serviceURls = new SAPPeriIMService();
        public AccidentController(AccidentEntryManager accidententrymanager,
            AccidentClaimManager accidentclaimmanager, LookupManager objLookupManager,
            AccidentClaimApprovalManager accidentclaimapprovalmanager
            )
        {
            _accidententrymanager = accidententrymanager;
            _accidentclaimmanager = accidentclaimmanager;
            _objLookupManager = objLookupManager;
            _accidentclaimapprovalmanager = accidentclaimapprovalmanager;
        }


        #region AccidentEntry

        /// <summary>
        /// Accidents the entry.
        /// </summary>
        /// <returns></returns>
        public ActionResult AccidentEntry()
        {
            return View();
        }

        /// <summary>
        /// Gets the drivers.
        /// </summary>
        /// <param name="UnitID">The unit identifier.</param>
        /// <returns></returns>
        public JsonResult GetDrivers(int UnitID)
        {
            var data = _accidententrymanager.GetDrivers(UnitID);
            return Json(data, JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// Saves the accident entry.
        /// </summary>
        /// <param name="Details">The details.</param>
        /// <returns></returns>
        [HttpPost]
        public int SaveAccidentEntry(AccidentModel Details)
        {

            return _accidententrymanager.SaveAccidentEntry(Details);
        }

        /// <summary>
        /// Loads the accidents.
        /// </summary>
        /// <param name="UnitID">The unit identifier.</param>
        /// <returns></returns>
        public JsonResult loadAccidents()
        {
            var data = _accidententrymanager.loadAccidents();
            return Json(data, JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// Loads the accidentsby identifier.
        /// </summary>
        /// <param name="AccidentID">The accident identifier.</param>
        /// <returns></returns>
        public JsonResult loadAccidentsbyID(int AccidentID)
        {
            var data = _accidententrymanager.loadAccidentsbyID(AccidentID);
            return Json(data, JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// Deletes the accident identifier.
        /// </summary>
        /// <param name="AccidentID">The accident identifier.</param>
        /// <returns></returns>
        public int deleteAccidentID(int AccidentID)
        {
            return _accidententrymanager.deleteAccidentID(AccidentID);
        }

        #endregion

        #region AccidentClaim

        /// <summary>
        /// Accidents the claim.
        /// </summary>
        /// <returns></returns>
        public ActionResult AccidentClaim()
        {
            AccidentViewModel vm = new AccidentViewModel();
            vm.Vendorviewmodel = new VendorViewModel();
            vm.Vendorviewmodel.lstCities = _serviceURls.GetAllCities();
            vm.Vendorviewmodel.TitleList = _serviceURls.GetTitle();
            vm.Vendorviewmodel.lstStates = _serviceURls.GetStateByCountry(1);
            vm.Vendorviewmodel.lstCountry = _serviceURls.GetAllCountries();
            return View(vm);
        }

        /// <summary>
        /// Gets the accident i ds.
        /// </summary>
        /// <param name="UnitID">The unit identifier.</param>
        /// <returns></returns>
        public JsonResult GetAccidentIDs(int UnitID)
        {
            var data = _accidentclaimmanager.GetAccidentIDs(UnitID);
            return Json(data, JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// Saves the accident claim.
        /// </summary>
        /// <param name="Details">The details.</param>
        /// <param name="test">The test.</param>
        /// <returns></returns>
        [HttpPost]
        public int SaveAccidentClaim(AccidentModel Details, string test)
        {
            int result = 0, sapID = 0;
            var vehicleType = _objLookupManager.loadLookUps(SAPPERI.Model.ConstantModel.lookupCategory.TransactionType);
            foreach (var luk in vehicleType)
            {
                if (luk.Type == "AccidentClaim")
                {
                    Details.LookupTransactionTypeID = luk.LookupID;
                    Details.LookupTransactionType = luk.Type;
                }
            }
            result = _accidentclaimmanager.SaveAccidentClaim(Details);

            return result;

        }

        /// <summary>
        /// Loads the accident claims.
        /// </summary>
        /// <returns></returns>
        public JsonResult loadAccidentClaims()
        {
            var data = _accidentclaimmanager.loadAccidentClaims();
            return Json(data, JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// Loads the accident claimsby identifier.
        /// </summary>
        /// <param name="AccidentID">The accident identifier.</param>
        /// <returns></returns>
        public JsonResult loadAccidentClaimsbyID(int AccidentID)
        {
            var data = _accidentclaimmanager.loadAccidentClaimDetailsbyID(AccidentID);
            return Json(data, JsonRequestBehavior.AllowGet);
        }

        #endregion
        #region AccidentClaimApproval
        public ActionResult AccidentClaimApproval()
        {
            AccidentViewModel vm = new AccidentViewModel();
            vm.Vendorviewmodel = new VendorViewModel();
            vm.Vendorviewmodel.lstCities = _serviceURls.GetAllCities();
            vm.Vendorviewmodel.TitleList = _serviceURls.GetTitle();
            vm.Vendorviewmodel.lstStates = _serviceURls.GetStateByCountry(1);
            vm.Vendorviewmodel.lstCountry = _serviceURls.GetAllCountries();
            return View(vm);
        }


        /// <summary>
        /// Gets the claims.
        /// </summary>
        /// <param name="UnitID">The unit identifier.</param>
        /// <returns></returns>
        public JsonResult GetClaims(int UnitID)
        {
            var data = _accidentclaimapprovalmanager.GetClaims(UnitID);
            return Json(data, JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// Loads the approvals.
        /// </summary>
        /// <returns></returns>
        public JsonResult loadApprovals()
        {
            var data = _accidentclaimapprovalmanager.loadApprovals();
            return Json(data, JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// Loads the approvalsby identifier.
        /// </summary>
        /// <param name="AccidentID">The accident identifier.</param>
        /// <returns></returns>
        public JsonResult loadApprovalsbyID(int AccidentID)
        {
            var data = _accidentclaimapprovalmanager.loadApprovalsbyID(AccidentID);
            return Json(data, JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="Details"></param>
        /// <returns></returns>
        [HttpPost]
        public int SaveApproval(AccidentModel Details)
        {
            int result = 0;
            var vehicleType = _objLookupManager.loadLookUps(SAPPERI.Model.ConstantModel.lookupCategory.TransactionType);
            foreach (var luk in vehicleType)
            {
                if (luk.Type == "AccidentClaimApproval")
                {
                    Details.LookupTransactionTypeID = luk.LookupID;
                    Details.LookupTransactionType = luk.Type;
                }
            }
            result = _accidentclaimapprovalmanager.SaveApproval(Details);


            return result;

        }
        #endregion
        /// <summary>
        /// get defualt AccidentadvanceAccount by unit
        /// </summary>
        /// <param name="UnitID"></param>
        /// <returns></returns>
        public JsonResult FetchAccidentadvanceAccount(int UnitID)
        {
            var ExpenseID = _accidentclaimapprovalmanager.FetchAccidentadvanceAccount(UnitID);
            return Json(ExpenseID, JsonRequestBehavior.AllowGet);
        }

        /// <summary>
        /// get Default  BusinessArea  by unit
        /// </summary>
        /// <returns></returns>

        public JsonResult FetchDefaultBusinessArea(int UnitID)
        {
            var Areas = _serviceURls.GetBusinesplaceByUnit(UnitID);
            return Json(Areas, JsonRequestBehavior.AllowGet);

        }


    }
}

AccidentClaimManager.cs
=======================
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Configuration;
using SAPPERI.Service;
using SAPPERI.Model.SeviceModel;
using SAPPERI.Model.Model;
using SAPPERI.Model.ViewModel;
using SAPPERI.Model;
using Framework.Web;
using DapperBase;

namespace SAPPERI.Biz
{
    public class AccidentClaimManager
    {

        private readonly SAPPeriIMService _serviceURls = new SAPPeriIMService();
        private readonly IDapperRepository _repository;

        public AccidentClaimManager(IDapperRepository repository)
        {
            _repository = repository;
        }


        /// <summary>
        /// Gets the accident i ds.
        /// </summary>
        /// <param name="UnitID">The unit identifier.</param>
        /// <returns></returns>
        public IEnumerable<AccidentModel> GetAccidentIDs(int UnitID)
        {
            return _repository.Query<AccidentModel>(@"SELECT acc.AccidentID,acc.AccidentEntryID,veh.VehicleID,
            veh.VehicleNo, DATE_FORMAT(acc.AccidentDate, '%d/%m/%Y')  AccidentDateString from peri_vms_accidents
            acc inner join peri_vms_vehicle veh on veh.VehicleID=acc.VehicleID 
                    where acc.IsActive=1 and acc.UnitID=@UnitID and acc.SAPAdvanceID=0 and acc.SAPRecieptID=0", new
            {
                UnitID = UnitID
            });
        }

        /// <summary>
        /// Saves the accident claim.
        /// </summary>
        /// <param name="Details">The details.</param>
        /// <returns></returns>
        public int SaveAccidentClaim(AccidentModel Details)
        {
            int result = 0, SAPID=0, AccidentID=0;
            //if (Details.AccidentID > 0)
            //{
                result = _repository.Execute(@"UPDATE peri_vms_accidents SET
                                            VehicleID=@VehicleID,
                                            AccidentEntryID=@AccidentEntryID,
                                            AccidentDate=@AccidentDate,
                                            ClaimDate=@ClaimDate,
                                            ClaimReferenceNo=@ClaimReferenceNo,
                                            ReferenceNo=@ReferenceNo,
                                            VehicleExpenses=@VehicleExpenses,
                                            OtherExpense=@OtherExpense,
                                            OtherExpenseText=@OtherExpenseText,
                                            ClaimAmount=@ClaimAmount,
                                            ActualAmount=@ActualAmount,
                                            BusinesAreaCode=@BusinesAreaCode,
                                            CostCenterCode=@CostCenterCode,
                                            InternalOrderCode=@InternalOrderCode,
                                            PaymentMode=@PaymentMode,
                                            SupplierID=@SupplierID,                                           
                                            BusinessAreaCode2=@BusinessAreaCode2,
                                            CompanyCode=@CompanyCode,
                                            UnitCode=@UnitCode,
                                            CompanyID=@CompanyID,
                                            UnitID=@UnitID,
                                            ModifiedBy=@CreatedBy,
                                            ModifiedTime=@CreatedTime,
                                            BusinessAreaID=@BusinessAreaID,
                                            CostCenterID=@CostCenterID,
                                            InternalOrderID=@InternalOrderID,
                                            BusinessAreaID2=@BusinessAreaID2,
                                            UnitName=@UnitName,
                                            CompanyName=@CompanyName,
                                            PaymentModeID=@PaymentModeID,                                           
                                            VendorName=@VendorName where AccidentID=@AccidentID",

                                        new
                                        {
                                            AccidentID = Details.AccidentID,
                                            VehicleID = Details.VehicleID,
                                            AccidentEntryID = Details.AccidentEntryID,
                                            AccidentDate = Details.AccidentDate,
                                            ClaimDate = Details.ClaimDate,
                                            ClaimReferenceNo = Details.ClaimReferenceNo,
                                            ReferenceNo=Details.ReferenceNo,
                                            VehicleExpenses = Details.VehicleExpenses,
                                            OtherExpense = Details.OtherExpense,
                                            OtherExpenseText= Details.AccidentRemarks,
                                            ClaimAmount = Details.ClaimAmount,
                                            ActualAmount= Details.ActualAmount,
                                            BusinesAreaCode = Details.BusinesAreaCode,
                                            CostCenterCode = Details.CostCenterCode,
                                            InternalOrderCode = Details.InternalOrderCode,
                                            PaymentMode = Details.PaymentMode,
                                            SupplierID = Details.SupplierID,
                                            BusinessAreaCode2 = Details.BusinessAreaCode2,
                                            CompanyCode = ApplicationContext.Current.UserInfo.CompanyCode,
                                            UnitCode = Details.UnitCode,
                                            CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                                            UnitID = Details.UnitID,
                                            CreatedBy = ApplicationContext.Current.UserInfo.UserID,
                                            CreatedTime = DateTime.UtcNow,
                                            BusinessAreaID = Details.BusinessAreaID,
                                            CostCenterID = Details.CostCenterID,
                                            InternalOrderID = Details.InternalOrderID,
                                            BusinessAreaID2 = Details.BusinessAreaID2,
                                            UnitName = Details.UnitName,
                                            CompanyName = ApplicationContext.Current.UserInfo.CompanyName,
                                            PaymentModeID = Details.PaymentModeID,
                                            VendorName=Details.VendorName

                                        });
                AccidentID = Details.AccidentID;
            //}
            //else
            //{
            //    AccidentID = _repository.Insert(@"INSERT INTO peri_vms_accidents(
            //                                VehicleID,
            //                                AccidentEntryID,
            //                                AccidentDate,
            //                                ClaimDate,
            //                                ClaimReferenceNo,
            //                                ReferenceNo,
            //                                VehicleExpenses,
            //                                OtherExpense,
            //                                ClaimAmount,
            //                                BusinesAreaCode,
            //                                CostCenterCode,
            //                                InternalOrderCode,
            //                                PaymentMode,
            //                                SupplierID,                                            
            //                                BusinessAreaCode2,
            //                                CompanyCode,
            //                                UnitCode,
            //                                CompanyID,
            //                                UnitID,
            //                                CreatedBy,
            //                                CreatedTime,
            //                                BusinessAreaID,
            //                                CostCenterID,
            //                                InternalOrderID,
            //                                BusinessAreaID2,
            //                                UnitName,
                                            //CompanyName,
                                            //PaymentModeID,
                                            //VendorName)
                                            //values
                                            //(
                                            //@VehicleID,
                                            //@AccidentEntryID,
                                            //@AccidentDate,
                                            //@ClaimDate,
                                            //@ClaimReferenceNo,
                                            //@ReferenceNo,
                                            //@VehicleExpenses,
                                            //@OtherExpense,
                                            //@ClaimAmount,
                                            //@BusinesAreaCode,
                                            //@CostCenterCode,
                                            //@InternalOrderCode,
                                            //@PaymentMode,
                                            //@SupplierID,                                           
                                            //@BusinessAreaCode2,
                                            //@CompanyCode,
                                            //@UnitCode,
                                            //@CompanyID,
                                            //@UnitID,
                                            //@CreatedBy,
                                            //@CreatedTime,
                                            //@BusinessAreaID,
                                            //@CostCenterID,
                                            //@InternalOrderID,
                                            //@BusinessAreaID2,
                                            //@UnitName,
                                            //@CompanyName,
                                            //@PaymentModeID,
                                            //@VendorName
                                            //)",
                                            //new
                                            //{
                                            //    VehicleID = Details.VehicleID,
                                            //    AccidentEntryID = Details.AccidentEntryID,
                                            //    AccidentDate = Details.AccidentDate,
                                            //    ClaimDate = Details.ClaimDate,
                                            //    ClaimReferenceNo = Details.ClaimReferenceNo,
                                            //    ReferenceNo=Details.ReferenceNo,
                                            //    VehicleExpenses = Details.VehicleExpenses,
                                            //    OtherExpense = Details.OtherExpense,
                                            //    ClaimAmount = Details.ClaimAmount,
                                            //    BusinesAreaCode = Details.BusinesAreaCode,
                                            //    CostCenterCode = Details.CostCenterCode,
                                            //    InternalOrderCode = Details.InternalOrderCode,
                                            //    PaymentMode = Details.PaymentMode,
                                            //    SupplierID = Details.SupplierID,
                                            //    BusinessAreaCode2 = Details.BusinessAreaCode2,
                                            //    CompanyCode = ApplicationContext.Current.UserInfo.CompanyCode,
                                            //    UnitCode = Details.UnitCode,
                                            //    CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                                            //    UnitID = Details.UnitID,
                                            //    CreatedBy = ApplicationContext.Current.UserInfo.UserID,
                                            //    CreatedTime = DateTime.UtcNow,
                                            //    BusinessAreaID = Details.BusinessAreaID,
                                            //    CostCenterID = Details.CostCenterID,
                                            //    InternalOrderID = Details.InternalOrderID,
                                            //    BusinessAreaID2 = Details.BusinessAreaID2,
                                            //    UnitName = Details.UnitName,
                                            //    CompanyName = ApplicationContext.Current.UserInfo.CompanyName,
                                            //    PaymentModeID = Details.PaymentModeID,
                                            //    VendorName= Details.VendorName,

                                            //});                
            //}

           
                if (Details.SAPID == 0)
                {
                    SAPID = _repository.Insert(@"INSERT INTO peri_vms_sap 
                                                        (ReferingTransactionID, 
                                                        ActualDate,
                                                        BillNo,
                                                        Reference,
                                                        SAPExpenseAccountID,
                                                        SAPExpenseAccount,
                                                        Amount,
                                                        LookupTransactionType,
                                                        LookupTransactionTypeID,
                                                        Address1,
                                                        Address2,
                                                        Address3,
                                                        Place,
                                                        Title,
                                                        TitleID,
                                                        VendorID,
                                                        VendorName,
                                                        VendorCode,
                                                        CreatedBy,
                                                        CreatedTime,
                                                        CompanyID,
                                                        UnitID,
                                                        UnitCode,
                                                        CompanyCode,
                                                        UnitName,
                                                        CompanyName,
                                                        IsOneTimeVendor,
                                                        CostCenterID,
                                                        CostCenterCode,
                                                        CostCenter,
                                                        InternalOrderID,
                                                        InternalOrderCode,
                                                        InternalOrder,
                                                        BusinessAreaID,
                                                        BussinessArea,
                                                        BussinessAreaCode,
                                                        BussinessArea2,
                                                        BussinessAreaID2,
                                                        BussinessAreaCode2,
                                                        PaymentModeID,
                                                        PaymentMode,
                                                        IsRegisteredVendor,
                                                        CityID,
                                                        CityName,
                                                        StateID,
                                                        StateName,
                                                        CountryID,
                                                        CountryName,
                                                        PIN)
                                                        values
                                                        (
                                                        @ReferingTransactionID,
                                                        @ActualDate,
                                                        @BillNo,
                                                        @Reference,
                                                        @SAPExpenseAccountID,
                                                        @SAPExpenseAccount,
                                                        @Amount,
                                                        @LookupTransactionType,
                                                        @LookupTransactionTypeID,
                                                        @Address1,
                                                        @Address2,
                                                        @Address3,
                                                        @Place,
                                                        @Title,
                                                        @TitleID,
                                                        @VendorID,
                                                        @VendorName,
                                                        @VendorCode,
                                                        @CreatedBy,
                                                        @CreatedTime,
                                                        @CompanyID,
                                                        @UnitID,
                                                        @UnitCode,
                                                        @CompanyCode,
                                                        @UnitName,
                                                        @CompanyName,
                                                        @IsOneTimeVendor,
                                                        @CostCenterID,
                                                        @CostCenterCode,
                                                        @CostCenter,
                                                        @InternalOrderID,
                                                        @InternalOrderCode,
                                                        @InternalOrder,  
                                                        @BusinessAreaID,
                                                        @BussinessArea,
                                                        @BussinessAreaCode,
                                                        @BussinessArea2,
                                                        @BussinessAreaID2,
                                                        @BussinessAreaCode2,
                                                        @PaymentModeID,
                                                        @PaymentMode,
                                                        @IsRegisteredVendor,
                                                        @CityID,
                                                        @CityName,
                                                        @StateID,
                                                        @StateName,
                                                        @CountryID,
                                                        @CountryName,
                                                        @PIN
                                                        )",
                                                        new
                                                        {
                                                            ReferingTransactionID=AccidentID,
                                                            ActualDate = Details.ClaimDate,
                                                            BillNo = Details.ClaimReferenceNo,
                                                            Reference = Details.ReferenceNo,
                                                            SAPExpenseAccountID = Details.SAPExpenseAccountID,
                                                            SAPExpenseAccount = Details.SAPExpenseAccount,
                                                            Amount = Details.ClaimAmount,
                                                            LookupTransactionType = Details.LookupTransactionType,
                                                            LookupTransactionTypeID = Details.LookupTransactionTypeID,
                                                            Address1 = Details.Address1,
                                                            Address2 = Details.Address2,
                                                            Address3 = Details.Address3,
                                                            Place = Details.Address3,
                                                            Title = Details.Title,
                                                            TitleID = Details.TitleID,
                                                            VendorID = Details.VendorID,
                                                            VendorName = Details.VendorName,
                                                            VendorCode = Details.VendorCode,
                                                            CreatedBy = ApplicationContext.Current.UserInfo.UserID,
                                                            CreatedTime = DateTime.UtcNow,
                                                            CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                                                            UnitID = Details.UnitID,
                                                            UnitCode = Details.UnitCode,
                                                            CompanyCode = ApplicationContext.Current.UserInfo.CompanyCode,
                                                            UnitName = Details.UnitName,
                                                            CompanyName = ApplicationContext.Current.UserInfo.CompanyName,
                                                            IsOneTimeVendor = Details.IsOneTimeVendor,
                                                            CostCenter = Details.CostCenter,
                                                            CostCenterID = Details.CostCenterID,
                                                            CostCenterCode = Details.CostCenterCode,
                                                            InternalOrder = Details.InternalOrder,
                                                            InternalOrderCode = Details.InternalOrderCode,
                                                            InternalOrderID = Details.InternalOrderID,
                                                            BusinessAreaID = Details.BusinessAreaID,
                                                            BussinessArea = Details.BussinessArea,
                                                            BussinessAreaCode = Details.BussinessAreaCode,
                                                            BussinessArea2 = Details.BussinessArea2,
                                                            BussinessAreaID2 = Details.BussinessAreaID2,
                                                            BussinessAreaCode2 = Details.BussinessAreaCode2,
                                                            PaymentModeID = Details.PaymentModeID,
                                                            PaymentMode = Details.PaymentMode,
                                                            IsRegisteredVendor = Details.IsRegisteredVendor,
                                                            CityID = Details.CityID,
                                                            CityName = Details.CityName,
                                                            StateID = Details.StateID,
                                                            StateName = Details.StateName,
                                                            CountryID = Details.CountryID,
                                                            CountryName = Details.CountryName,
                                                            PIN = Details.PIN
                                                        });

                result = _repository.Execute(@"UPDATE peri_vms_accidents SET
                                            SAPAdvanceID=@SAPAdvanceID where AccidentID=@AccidentID",
                                           new
                                           {
                                               AccidentID = AccidentID,
                                               SAPAdvanceID = SAPID
                                           });
            }
                else
                {
                    result = _repository.Execute(@"UPDATE peri_vms_sap SET                                   
                                                        ActualDate=@ActualDate,
                                                        BillNo=@BillNo,
                                                        Reference=@Reference,
                                                        SAPExpenseAccountID=@SAPExpenseAccountID,
                                                        SAPExpenseAccount=@SAPExpenseAccount,
                                                        Amount=@Amount,
                                                        LookupTransactionType=@LookupTransactionType,
                                                        LookupTransactionTypeID=@LookupTransactionTypeID,
                                                        Address1=@Address1,
                                                        Address2=@Address2,
                                                        Address3=@Address3,
                                                        Place=@Place,
                                                        Title=@Title,
                                                        TitleID=@TitleID,
                                                        VendorID=@VendorID,
                                                        VendorName=@VendorName,
                                                        VendorCode=@VendorCode,
                                                        CreatedBy=@CreatedBy,
                                                        CreatedTime=@CreatedTime,
                                                        CompanyID=@CompanyID,
                                                        UnitID=@UnitID,
                                                        UnitCode=@UnitCode,
                                                        CompanyCode=@CompanyCode,
                                                        UnitName=@UnitName,
                                                        CompanyName=@CompanyName,
                                                        IsOneTimeVendor=@IsOneTimeVendor,
                                                        CostCenter=@CostCenter,
                                                        InternalOrder=@InternalOrder,
                                                        CostCenterID=@CostCenterID,
                                                        CostCenterCode=@CostCenterCode,
                                                        InternalOrderID=@InternalOrderID,
                                                        InternalOrderCode=@InternalOrderCode,
                                                        BusinessAreaID=@BusinessAreaID,
                                                        BussinessArea=@BussinessArea,
                                                        BussinessAreaCode=@BussinessAreaCode,
                                                        BussinessArea2=@BussinessArea2,
                                                        BussinessAreaID2=@BussinessAreaID2,
                                                        BussinessAreaCode2=@BussinessAreaCode2,
                                                        PaymentModeID=@PaymentModeID,
                                                        PaymentMode=@PaymentMode,
                                                        IsRegisteredVendor=@IsRegisteredVendor,
                                                        CityID=@CityID,
                                                        CityName=@CityName,
                                                        StateID=@StateID,
                                                        StateName=@StateName,
                                                        CountryID=@CountryID,
                                                        CountryName=@CountryName,
                                                        PIN=@PIN where SAPID=@SAPID",
                                                        new
                                                        {
                                                            SAPID=Details.SAPID,
                                                            ActualDate = Details.ClaimDate,
                                                            BillNo = Details.ClaimReferenceNo,
                                                            Reference = Details.ReferenceNo,
                                                            SAPExpenseAccountID = Details.SAPExpenseAccountID,
                                                            SAPExpenseAccount = Details.SAPExpenseAccount,
                                                            Amount = Details.ClaimAmount,
                                                            LookupTransactionType = Details.LookupTransactionType,
                                                            LookupTransactionTypeID = Details.LookupTransactionTypeID,
                                                            Address1 = Details.Address1,
                                                            Address2 = Details.Address2,
                                                            Address3 = Details.Address3,
                                                            Place = Details.Address3,
                                                            Title = Details.Title,
                                                            TitleID = Details.TitleID,
                                                            VendorID = Details.VendorID,
                                                            VendorName = Details.VendorName,
                                                            VendorCode = Details.VendorCode,
                                                            CreatedBy = ApplicationContext.Current.UserInfo.UserID,
                                                            CreatedTime = DateTime.UtcNow,
                                                            CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                                                            UnitID = Details.UnitID,
                                                            UnitCode = Details.UnitCode,
                                                            CompanyCode = ApplicationContext.Current.UserInfo.CompanyCode,
                                                            UnitName = Details.UnitName,
                                                            CompanyName = ApplicationContext.Current.UserInfo.CompanyName,
                                                            IsOneTimeVendor = Details.IsOneTimeVendor,
                                                            CostCenter = Details.CostCenter,
                                                            InternalOrder = Details.InternalOrder,
                                                            CostCenterID = Details.CostCenterID,
                                                            CostCenterCode = Details.CostCenterCode,
                                                            InternalOrderID = Details.InternalOrderID,
                                                            InternalOrderCode = Details.InternalOrderCode,
                                                            BusinessAreaID = Details.BusinessAreaID,
                                                            BussinessArea = Details.BussinessArea,
                                                            BussinessAreaCode = Details.BussinessAreaCode,
                                                            BussinessArea2 = Details.BussinessArea2,
                                                            BussinessAreaID2 = Details.BussinessAreaID2,
                                                            BussinessAreaCode2 = Details.BussinessAreaCode2,
                                                            PaymentModeID = Details.PaymentModeID,
                                                            PaymentMode = Details.PaymentMode,
                                                            IsRegisteredVendor = Details.IsRegisteredVendor,
                                                            CityID = Details.CityID,
                                                            CityName = Details.CityName,
                                                            StateID = Details.StateID,
                                                            StateName = Details.StateName,
                                                            CountryID = Details.CountryID,
                                                            CountryName = Details.CountryName,
                                                            PIN = Details.PIN
                                                        });

                
            }
           

               
            
            return AccidentID;
        }

        /// <summary>
        /// Loads the accident claims.
        /// </summary>
        /// <returns></returns>
        public IEnumerable<AccidentModel> loadAccidentClaims()
        {
            return _repository.Query<AccidentModel>(@"SELECT acc.AccidentID,acc.AccidentEntryID,acc.VehicleID,
                                        veh.VehicleNo,acc.UnitName,DATE_FORMAT(acc.AccidentDate, '%d/%m/%Y')
                            AccidentDateString,acc.VendorName,DATE_FORMAT(acc.ClaimDate, '%d/%m/%Y')
                            ClaimDateString,acc.ClaimAmount,sap.SAPPost from peri_vms_accidents
                        acc inner join peri_vms_vehicle veh on acc.VehicleID=veh.VehicleID inner join 
                        peri_vms_sap sap on sap.SAPID=acc.SAPAdvanceID where acc.IsActive=1
                        and acc.SAPAdvanceID >0");
        }

        /// <summary>
        /// Loads the accident claim detailsby identifier.
        /// </summary>
        /// <param name="AccidentID">The accident identifier.</param>
        /// <returns></returns>
        public IEnumerable<AccidentModel> loadAccidentClaimDetailsbyID(int AccidentID)
        {

            return _repository.Query<AccidentModel>(@"SELECT acc.AccidentID,acc.UnitID,acc.UnitCode,
                                acc.UnitName,acc.SupplierID,acc.VendorName,acc.AccidentEntryID,veh.VehicleNo,
                               acc.VehicleID,DATE_FORMAT(acc.AccidentDate, '%d/%m/%Y') AccidentDateString,
                            acc.ClaimReferenceNo,DATE_FORMAT(acc.ClaimDate, '%d/%m/%Y') ClaimDateString,
                            acc.ReferenceNo,acc.VehicleExpenses,acc.OtherExpense,acc.ClaimAmount,acc.AccidentRemarks,sap.*
                            from peri_vms_accidents acc
                        inner join peri_vms_vehicle veh on acc.VehicleID=veh.VehicleID inner join 
                        peri_vms_sap sap on sap.SAPID=acc.SAPAdvanceID where acc.AccidentID=@AccidentID",
                            new
                            {
                                AccidentID = AccidentID
                            });
        }

        /// <summary>
        /// Gets the claims.
        /// </summary>
        /// <param name="UnitID">The unit identifier.</param>
        /// <returns></returns>
        public IEnumerable<AccidentModel> GetClaims(int UnitID)
        {
            return _repository.Query<AccidentModel>(@"SELECT acc.AccidentID,acc.AccidentEntryID,veh.VehicleID,
            veh.VehicleNo, DATE_FORMAT(acc.AccidentDate, '%d/%m/%Y')  AccidentDateString,acc.ClaimReferenceNo,
            DATE_FORMAT(acc.ClaimDate, '%d/%m/%Y')  ClaimDateString,acc.ClaimAmount from peri_vms_accidents
            acc inner join peri_vms_vehicle veh on veh.VehicleID=acc.VehicleID 
                    where acc.UnitID=@UnitID and acc.SAPAdvanceID>0", new
            {
                UnitID = UnitID
            });
        }

    }
}


AccidentClaimApprovalManager.cs
===============================
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Configuration;
using SAPPERI.Service;
using SAPPERI.Model.SeviceModel;
using SAPPERI.Model.Model;
using SAPPERI.Model.ViewModel;
using SAPPERI.Model;
using Framework.Web;
using DapperBase;
using static SAPPERI.Model.ConstantModel;

namespace SAPPERI.Biz
{
    public class AccidentClaimApprovalManager
    {

        private readonly SAPPeriIMService _serviceURls = new SAPPeriIMService();
        private readonly IDapperRepository _repository;

        public AccidentClaimApprovalManager(IDapperRepository repository)
        {
            _repository = repository;
        }

        /// <summary>
        /// Gets the claims.
        /// </summary>
        /// <param name="UnitID">The unit identifier.</param>
        /// <returns></returns>
        public IEnumerable<AccidentModel> GetClaims(int UnitID)
        {
            return _repository.Query<AccidentModel>(@"SELECT acc.AccidentID,acc.AccidentEntryID,veh.VehicleID,
            veh.VehicleNo, DATE_FORMAT(acc.AccidentDate, '%d/%m/%Y')  AccidentDateString,acc.ClaimReferenceNo,
            DATE_FORMAT(acc.ClaimDate, '%d/%m/%Y')  ClaimDateString,acc.ClaimAmount,sap.BusinessAreaID,sap.BussinessArea,
            sap.BussinessAreaCode,sap.BussinessArea2,sap.BussinessAreaID2,sap.BussinessAreaCode2,sap.SAPExpenseAccountID,
            sap.SAPExpenseAccount,sap.CostCenterID,sap.CostCenterCode,sap.CostCenter,sap.InternalOrderID,
            sap.InternalOrderCode,sap.InternalOrder,sap.PaymentModeID from peri_vms_accidents
            acc inner join peri_vms_vehicle veh on veh.VehicleID=acc.VehicleID inner join peri_vms_sap sap on acc.SAPAdvanceID=sap.SAPID

                    where acc.UnitID=@UnitID and acc.SAPAdvanceID >0", new
            {
                UnitID = UnitID
            });
        }

        /// <summary>
        /// Loads the approvals.
        /// </summary>
        /// <returns></returns>
        public IEnumerable<AccidentModel> loadApprovals()
        {
            return _repository.Query<AccidentModel>(@"SELECT acc.AccidentID,acc.AccidentEntryID,acc.VehicleID,
                                        veh.VehicleNo,acc.UnitName,DATE_FORMAT(acc.AccidentDate, '%d/%m/%Y')
                            AccidentDateString,acc.VendorName,DATE_FORMAT(acc.ClaimDate, '%d/%m/%Y')
                            ClaimDateString,acc.ClaimAmount,sap.SAPPost,acc.ApprovedAmount,
                            DATE_FORMAT(acc.ApprovedDate, '%d/%m/%Y') ApprovedDateString from peri_vms_accidents
                        acc inner join peri_vms_vehicle veh on acc.VehicleID=veh.VehicleID inner join 
                        peri_vms_sap sap on sap.SAPID=acc.SAPRecieptID where acc.IsActive=1
                        and acc.SAPRecieptID >0");
        }
        /// <summary>
        /// Loads the accident claim detailsby identifier.
        /// </summary>
        /// <param name="AccidentID">The accident identifier.</param>
        /// <returns></returns>
        public IEnumerable<AccidentModel> loadApprovalsbyID(int AccidentID)
        {

            return _repository.Query<AccidentModel>(@"SELECT acc.AccidentID,acc.UnitID,acc.UnitCode,
                                acc.UnitName,acc.SupplierID,acc.VendorName,acc.AccidentEntryID,veh.VehicleNo,
                               acc.VehicleID,DATE_FORMAT(acc.AccidentDate, '%d/%m/%Y') AccidentDateString,
                            acc.ClaimReferenceNo,DATE_FORMAT(acc.ClaimDate, '%d/%m/%Y') ClaimDateString,
                           acc.ClaimAmount,DATE_FORMAT(acc.ApprovedDate, '%d/%m/%Y') ApprovedDateString,
                        acc.ApprovedAmount,acc.ApprovalReference,acc.Bank,acc.ClaimApprovedRemarks,sap.*
                            from peri_vms_accidents acc
                        inner join peri_vms_vehicle veh on acc.VehicleID=veh.VehicleID inner join 
                        peri_vms_sap sap on sap.SAPID=acc.SAPRecieptID where acc.AccidentID=@AccidentID",
                            new
                            {
                                AccidentID = AccidentID
                            });
        }


        /// <summary>
        /// Saves the approval.
        /// </summary>
        /// <param name="Details">The details.</param>
        /// <returns></returns>
        public int SaveApproval(AccidentModel Details)
        {
            int result = 0, SAPID = 0, AccidentID = 0;
            //if (Details.AccidentID > 0)
            //{
            result = _repository.Execute(@"UPDATE peri_vms_accidents SET
                                            VehicleID=@VehicleID,
                                            AccidentEntryID=@AccidentEntryID,
                                            AccidentDate=@AccidentDate,
                                            ClaimDate=@ClaimDate,
                                            ClaimReferenceNo=@ClaimReferenceNo,                                                                                     
                                            ClaimAmount=@ClaimAmount,
                                            ApprovalReference=@ReferenceNo,
                                            ApprovedDate=@ApprovedDate,
                                            ApprovedAmount=@ApprovedAmount,
                                            Bank=@Bank,
                                            ClaimApprovedRemarks=@ClaimApprovedRemarks,
                                            ActualAmount=@ApprovedAmount,
                                            BusinesAreaCode=@BusinesAreaCode,
                                            CostCenterCode=@CostCenterCode,
                                            InternalOrderCode=@InternalOrderCode,
                                            PaymentMode=@PaymentMode,
                                            SupplierID=@SupplierID,                                           
                                            BusinessAreaCode2=@BusinessAreaCode2,
                                            CompanyCode=@CompanyCode,
                                            UnitCode=@UnitCode,
                                            CompanyID=@CompanyID,
                                            UnitID=@UnitID,
                                            ModifiedBy=@CreatedBy,
                                            ModifiedTime=@CreatedTime,
                                            BusinessAreaID=@BusinessAreaID,
                                            CostCenterID=@CostCenterID,
                                            InternalOrderID=@InternalOrderID,
                                            BusinessAreaID2=@BusinessAreaID2,
                                            UnitName=@UnitName,
                                            CompanyName=@CompanyName,
                                            PaymentModeID=@PaymentModeID,                                           
                                            VendorName=@VendorName where AccidentID=@AccidentID",

                                    new
                                    {
                                        AccidentID = Details.AccidentID,
                                        VehicleID = Details.VehicleID,
                                        AccidentEntryID = Details.AccidentEntryID,
                                        AccidentDate = Details.AccidentDate,
                                        ClaimDate = Details.ClaimDate,
                                        ClaimReferenceNo = Details.ClaimReferenceNo,
                                        ClaimAmount = Details.ClaimAmount,
                                        ReferenceNo = Details.ReferenceNo,
                                        ApprovedDate = Details.ApprovedDate,
                                        ApprovedAmount = Details.ApprovedAmount,
                                        Bank = Details.Bank,
                                        ClaimApprovedRemarks = Details.ClaimApprovedRemarks,
                                        BusinesAreaCode = Details.BusinesAreaCode,
                                        CostCenterCode = Details.CostCenterCode,
                                        InternalOrderCode = Details.InternalOrderCode,
                                        PaymentMode = Details.PaymentMode,
                                        SupplierID = Details.SupplierID,
                                        BusinessAreaCode2 = Details.BusinessAreaCode2,
                                        CompanyCode = ApplicationContext.Current.UserInfo.CompanyCode,
                                        UnitCode = Details.UnitCode,
                                        CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                                        UnitID = Details.UnitID,
                                        CreatedBy = ApplicationContext.Current.UserInfo.UserID,
                                        CreatedTime = DateTime.UtcNow,
                                        BusinessAreaID = Details.BusinessAreaID,
                                        CostCenterID = Details.CostCenterID,
                                        InternalOrderID = Details.InternalOrderID,
                                        BusinessAreaID2 = Details.BusinessAreaID2,
                                        UnitName = Details.UnitName,
                                        CompanyName = ApplicationContext.Current.UserInfo.CompanyName,
                                        PaymentModeID = Details.PaymentModeID,
                                        VendorName = Details.VendorName

                                    });
            AccidentID = Details.AccidentID;


            if (Details.SAPID == 0)
            {
                SAPID = _repository.Insert(@"INSERT INTO peri_vms_sap 
                                                        (ReferingTransactionID, 
                                                        ActualDate,
                                                        BillNo,
                                                        Reference,
                                                        SAPExpenseAccountID,
                                                        SAPExpenseAccount,
                                                        Amount,
                                                        LookupTransactionType,
                                                        LookupTransactionTypeID,
                                                        Address1,
                                                        Address2,
                                                        Address3,
                                                        Place,
                                                        Title,
                                                        TitleID,
                                                        VendorID,
                                                        VendorName,
                                                        VendorCode,
                                                        CreatedBy,
                                                        CreatedTime,
                                                        CompanyID,
                                                        UnitID,
                                                        UnitCode,
                                                        CompanyCode,
                                                        UnitName,
                                                        CompanyName,
                                                        IsOneTimeVendor,
                                                        CostCenterID,
                                                        CostCenterCode,
                                                        CostCenter,
                                                        InternalOrderID,
                                                        InternalOrderCode,
                                                        InternalOrder,
                                                        BusinessAreaID,
                                                        BussinessArea,
                                                        BussinessAreaCode,
                                                        BussinessArea2,
                                                        BussinessAreaID2,
                                                        BussinessAreaCode2,
                                                        PaymentModeID,
                                                        PaymentMode,
                                                        IsRegisteredVendor,
                                                        CityID,
                                                        CityName,
                                                        StateID,
                                                        StateName,
                                                        CountryID,
                                                        CountryName,
                                                        PIN)
                                                        values
                                                        (
                                                        @ReferingTransactionID,
                                                        @ActualDate,
                                                        @BillNo,
                                                        @Reference,
                                                        @SAPExpenseAccountID,
                                                        @SAPExpenseAccount,
                                                        @Amount,
                                                        @LookupTransactionType,
                                                        @LookupTransactionTypeID,
                                                        @Address1,
                                                        @Address2,
                                                        @Address3,
                                                        @Place,
                                                        @Title,
                                                        @TitleID,
                                                        @VendorID,
                                                        @VendorName,
                                                        @VendorCode,
                                                        @CreatedBy,
                                                        @CreatedTime,
                                                        @CompanyID,
                                                        @UnitID,
                                                        @UnitCode,
                                                        @CompanyCode,
                                                        @UnitName,
                                                        @CompanyName,
                                                        @IsOneTimeVendor,
                                                        @CostCenterID,
                                                        @CostCenterCode,
                                                        @CostCenter,
                                                        @InternalOrderID,
                                                        @InternalOrderCode,
                                                        @InternalOrder,  
                                                        @BusinessAreaID,
                                                        @BussinessArea,
                                                        @BussinessAreaCode,
                                                        @BussinessArea2,
                                                        @BussinessAreaID2,
                                                        @BussinessAreaCode2,
                                                        @PaymentModeID,
                                                        @PaymentMode,
                                                        @IsRegisteredVendor,
                                                        @CityID,
                                                        @CityName,
                                                        @StateID,
                                                        @StateName,
                                                        @CountryID,
                                                        @CountryName,
                                                        @PIN
                                                        )",
                                                    new
                                                    {
                                                        ReferingTransactionID = AccidentID,
                                                        ActualDate = Details.ClaimDate,
                                                        BillNo = Details.ClaimReferenceNo,
                                                        Reference = Details.ReferenceNo,
                                                        SAPExpenseAccountID = Details.SAPExpenseAccountID,
                                                        SAPExpenseAccount = Details.SAPExpenseAccount,
                                                        Amount = Details.ClaimAmount,
                                                        LookupTransactionType = Details.LookupTransactionType,
                                                        LookupTransactionTypeID = Details.LookupTransactionTypeID,
                                                        Address1 = Details.Address1,
                                                        Address2 = Details.Address2,
                                                        Address3 = Details.Address3,
                                                        Place = Details.Address3,
                                                        Title = Details.Title,
                                                        TitleID = Details.TitleID,
                                                        VendorID = Details.VendorID,
                                                        VendorName = Details.VendorName,
                                                        VendorCode = Details.VendorCode,
                                                        CreatedBy = ApplicationContext.Current.UserInfo.UserID,
                                                        CreatedTime = DateTime.UtcNow,
                                                        CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                                                        UnitID = Details.UnitID,
                                                        UnitCode = Details.UnitCode,
                                                        CompanyCode = ApplicationContext.Current.UserInfo.CompanyCode,
                                                        UnitName = Details.UnitName,
                                                        CompanyName = ApplicationContext.Current.UserInfo.CompanyName,
                                                        IsOneTimeVendor = Details.IsOneTimeVendor,
                                                        CostCenter = Details.CostCenter,
                                                        CostCenterID = Details.CostCenterID,
                                                        CostCenterCode = Details.CostCenterCode,
                                                        InternalOrder = Details.InternalOrder,
                                                        InternalOrderCode = Details.InternalOrderCode,
                                                        InternalOrderID = Details.InternalOrderID,
                                                        BusinessAreaID = Details.BusinessAreaID,
                                                        BussinessArea = Details.BussinessArea,
                                                        BussinessAreaCode = Details.BussinessAreaCode,
                                                        BussinessArea2 = Details.BussinessArea2,
                                                        BussinessAreaID2 = Details.BussinessAreaID2,
                                                        BussinessAreaCode2 = Details.BussinessAreaCode2,
                                                        PaymentModeID = Details.PaymentModeID,
                                                        PaymentMode = Details.PaymentMode,
                                                        IsRegisteredVendor = Details.IsRegisteredVendor,
                                                        CityID = Details.CityID,
                                                        CityName = Details.CityName,
                                                        StateID = Details.StateID,
                                                        StateName = Details.StateName,
                                                        CountryID = Details.CountryID,
                                                        CountryName = Details.CountryName,
                                                        PIN = Details.PIN
                                                    });

                result = _repository.Execute(@"UPDATE peri_vms_accidents SET
                                            SAPRecieptID=@SAPRecieptID where AccidentID=@AccidentID",
                                           new
                                           {
                                               AccidentID = AccidentID,
                                               SAPRecieptID = SAPID
                                           });
            }
            else
            {
                result = _repository.Execute(@"UPDATE peri_vms_sap SET                                   
                                                        ActualDate=@ActualDate,
                                                        BillNo=@BillNo,
                                                        Reference=@Reference,
                                                        SAPExpenseAccountID=@SAPExpenseAccountID,
                                                        SAPExpenseAccount=@SAPExpenseAccount,
                                                        Amount=@Amount,
                                                        LookupTransactionType=@LookupTransactionType,
                                                        LookupTransactionTypeID=@LookupTransactionTypeID,
                                                        Address1=@Address1,
                                                        Address2=@Address2,
                                                        Address3=@Address3,
                                                        Place=@Place,
                                                        Title=@Title,
                                                        TitleID=@TitleID,
                                                        VendorID=@VendorID,
                                                        VendorName=@VendorName,
                                                        VendorCode=@VendorCode,
                                                        CreatedBy=@CreatedBy,
                                                        CreatedTime=@CreatedTime,
                                                        CompanyID=@CompanyID,
                                                        UnitID=@UnitID,
                                                        UnitCode=@UnitCode,
                                                        CompanyCode=@CompanyCode,
                                                        UnitName=@UnitName,
                                                        CompanyName=@CompanyName,
                                                        IsOneTimeVendor=@IsOneTimeVendor,
                                                        CostCenter=@CostCenter,
                                                        InternalOrder=@InternalOrder,
                                                        CostCenterID=@CostCenterID,
                                                        CostCenterCode=@CostCenterCode,
                                                        InternalOrderID=@InternalOrderID,
                                                        InternalOrderCode=@InternalOrderCode,
                                                        BusinessAreaID=@BusinessAreaID,
                                                        BussinessArea=@BussinessArea,
                                                        BussinessAreaCode=@BussinessAreaCode,
                                                        BussinessArea2=@BussinessArea2,
                                                        BussinessAreaID2=@BussinessAreaID2,
                                                        BussinessAreaCode2=@BussinessAreaCode2,
                                                        PaymentModeID=@PaymentModeID,
                                                        PaymentMode=@PaymentMode,
                                                        IsRegisteredVendor=@IsRegisteredVendor,
                                                        CityID=@CityID,
                                                        CityName=@CityName,
                                                        StateID=@StateID,
                                                        StateName=@StateName,
                                                        CountryID=@CountryID,
                                                        CountryName=@CountryName,
                                                        PIN=@PIN where SAPID=@SAPID",
                                                    new
                                                    {
                                                        SAPID = Details.SAPID,
                                                        ActualDate = Details.ClaimDate,
                                                        BillNo = Details.ClaimReferenceNo,
                                                        Reference = Details.ReferenceNo,
                                                        SAPExpenseAccountID = Details.SAPExpenseAccountID,
                                                        SAPExpenseAccount = Details.SAPExpenseAccount,
                                                        Amount = Details.ClaimAmount,
                                                        LookupTransactionType = Details.LookupTransactionType,
                                                        LookupTransactionTypeID = Details.LookupTransactionTypeID,
                                                        Address1 = Details.Address1,
                                                        Address2 = Details.Address2,
                                                        Address3 = Details.Address3,
                                                        Place = Details.Address3,
                                                        Title = Details.Title,
                                                        TitleID = Details.TitleID,
                                                        VendorID = Details.VendorID,
                                                        VendorName = Details.VendorName,
                                                        VendorCode = Details.VendorCode,
                                                        CreatedBy = ApplicationContext.Current.UserInfo.UserID,
                                                        CreatedTime = DateTime.UtcNow,
                                                        CompanyID = ApplicationContext.Current.UserInfo.CompanyID,
                                                        UnitID = Details.UnitID,
                                                        UnitCode = Details.UnitCode,
                                                        CompanyCode = ApplicationContext.Current.UserInfo.CompanyCode,
                                                        UnitName = Details.UnitName,
                                                        CompanyName = ApplicationContext.Current.UserInfo.CompanyName,
                                                        IsOneTimeVendor = Details.IsOneTimeVendor,
                                                        CostCenter = Details.CostCenter,
                                                        InternalOrder = Details.InternalOrder,
                                                        CostCenterID = Details.CostCenterID,
                                                        CostCenterCode = Details.CostCenterCode,
                                                        InternalOrderID = Details.InternalOrderID,
                                                        InternalOrderCode = Details.InternalOrderCode,
                                                        BusinessAreaID = Details.BusinessAreaID,
                                                        BussinessArea = Details.BussinessArea,
                                                        BussinessAreaCode = Details.BussinessAreaCode,
                                                        BussinessArea2 = Details.BussinessArea2,
                                                        BussinessAreaID2 = Details.BussinessAreaID2,
                                                        BussinessAreaCode2 = Details.BussinessAreaCode2,
                                                        PaymentModeID = Details.PaymentModeID,
                                                        PaymentMode = Details.PaymentMode,
                                                        IsRegisteredVendor = Details.IsRegisteredVendor,
                                                        CityID = Details.CityID,
                                                        CityName = Details.CityName,
                                                        StateID = Details.StateID,
                                                        StateName = Details.StateName,
                                                        CountryID = Details.CountryID,
                                                        CountryName = Details.CountryName,
                                                        PIN = Details.PIN
                                                    });
            }
            string query = @"SELECT LotusMail FROM peri_vms_lotusmail lt INNER JOIN (


SELECT EmployeeID FROM `peri_vms_usage` WHERE `EffectiveDate`=(
SELECT MAX(`EffectiveDate`)  FROM 

peri_vms_usage WHERE VehicleID=@VehicleID  AND IsActive = 1  GROUP BY `VehicleID`)  AND VehicleID=@VehicleID AND IsActive = 1)tmp  ON tmp.`EmployeeID`=lt.`EmployeeID`  WHERE  IsActive = 1 ORDER BY `LotusMailID` DESC LIMIT 0,1";
            LotusMailModel empmail = _repository.Query<LotusMailModel>(query, new { VehicleID = Details.VehicleID }).SingleOrDefault();
            if (Details.ApprovedAmount != Details.ClaimAmount && empmail != null && !string.IsNullOrEmpty(empmail.LotusMail))
            {

                List<Param> paramList = new List<Param>();
                paramList.Add(new Param() { key = "AccidentID", Value = Details.AccidentEntryID });
                paramList.Add(new Param() { key = "AccidentDate", Value = Details.AccidentDate.ToString() });
                paramList.Add(new Param() { key = "VehicleNo", Value = Details.VehicleNo });
                paramList.Add(new Param() { key = "ClaimDate", Value = Details.ClaimDate.ToString() });
                paramList.Add(new Param() { key = "ClaimAmount", Value = Details.ClaimAmount.ToString() });
                paramList.Add(new Param() { key = "Vendor", Value = Details.VendorName.ToString() });
                paramList.Add(new Param() { key = "ApprovedDate", Value = Details.ApprovedDate.ToString() });
                paramList.Add(new Param() { key = "ApprovedAmount", Value = Details.ApprovedAmount.ToString() });
                SendEmail(empmail.LotusMail, paramList, "Accident Claim Approval", EmailTemplateType.AccidentClaimApproval);
            }


            return AccidentID;
        }

        private void SendEmail(string To, List<Param> paramList, string subject, EmailTemplateType templateType)
        {
            
            SendEmailSeviceModel email = new SendEmailSeviceModel()
            {
                //, string toAddress, string emailReceiverName
                ToAddress = To,
                FromAddress = ConfigurationManager.AppSettings["FromEmailId"].ToString(),
                EmailTemplateID = (int)templateType,
                Subject = subject,
                Params = paramList
            };
            bool result = _serviceURls.SendEmail(email);

        }
        /// <summary>
        /// get AccidentadvanceAccount and id
        /// </summary>
        /// <param name="UnitID"></param>
        /// <returns></returns>

        public IEnumerable<GeneralSetupModel> FetchAccidentadvanceAccount(int UnitID)
        {
            var Details = _repository.Query<GeneralSetupModel>(@"SELECT AdvanceDebitAccount,AdvanceDebitAccountID from peri_vms_setup where 
        IsActive=1 and UnitID=@UnitID", new { UnitID = UnitID });
            return Details;
        }
    }
}
